#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style apalike
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1.5cm
\topmargin 1.5cm
\rightmargin 1.5cm
\bottommargin 1.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Notes on Semi-Lagrangian Time Integration
\end_layout

\begin_layout Author
Martin Schreiber
\end_layout

\begin_layout Date
January 5th 2020
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Section
Related work
\end_layout

\begin_layout Itemize
First report of semi-Lagrangian formulation for weather prediction by Wiin-Niels
en 
\begin_inset CommandInset citation
LatexCommand cite
key "Wiin-Nielsen1959"
literal "false"

\end_inset

.
\end_layout

\begin_layout Itemize
Semi-Lagrangian formulation for barotropic atmosphere by Sawyer 
\begin_inset CommandInset citation
LatexCommand cite
key "Sawyer1963"
literal "false"

\end_inset

.
 Formulation which is based on conserving its vorticity along the trajectories
 (eq.
 (1)) based on wind field.
\end_layout

\begin_layout Itemize
Robert studied this in combination with implicit time integration using
 non-divergent barotropic vorticity equation 
\begin_inset CommandInset citation
LatexCommand cite
key "Robert1981"
literal "false"

\end_inset

.
\end_layout

\begin_deeper
\begin_layout Itemize
Here, he first identified that explicit time integration methods leads to
 700 times smaller errors than the overall ones for the fast gravity modes,
 hence justifying implicit treatment of them.
 Similar arguments with Rossby waves lead to a 40 times smaller error for
 explicit treatment of the non-linear advection, hence justifying semi-Lagrangia
n methods.
\end_layout

\begin_layout Itemize
A divergence diffusion and time filter were added to this model and removing
 them caused instabilities.
\begin_inset Newline newline
\end_inset

This was accounted for by the 
\emph on
Coriolis effect not treated semi-implicitly 
\emph default
and the semi-Lagrangian formulation was only put on the vorticity equation.
\end_layout

\end_deeper
\begin_layout Itemize
A new formulation, tackling the aforementioned issues was investigated for
 
\series bold
primitive meteorological equations
\series default
 by Robert 
\begin_inset CommandInset citation
LatexCommand cite
key "Robert1982"
literal "false"

\end_inset

.
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
A three time level scheme
\series default
 was used (departure, arrival and centered points)
\end_layout

\begin_layout Itemize
This used a centered difference scheme for the velocity and geopotential
 prognostic variables, hence leading to a 2nd order accurate scheme.
\end_layout

\end_deeper
\begin_layout Itemize
Numerical study in ECMWF's model by Temperton 
\begin_inset CommandInset citation
LatexCommand cite
key "Temperton1995"
literal "false"

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Different treatments of the Coriolis effect in three-time-level schemes
 were studied.
\end_layout

\begin_layout Itemize
Method 1) 
\series bold
Semi-implicit treatment of Coriolis term
\series default
 using two-time-level scheme (see 
\begin_inset CommandInset citation
LatexCommand cite
key "Cote1988"
literal "false"

\end_inset

):
\end_layout

\begin_deeper
\begin_layout Itemize
Simply solve linear equation including Coriolis term (see also T-REXI for
 linear SWE on rotating sphere).
\end_layout

\begin_layout Itemize
Advantage: Also suitable for 
\emph on
two-time-level schemes
\emph default
.
\end_layout

\begin_layout Itemize
Drawback in rotated or stretched coordinate systems: Solving for implicit
 system of equations gets 
\emph on
significantly more expensive
\emph default
.
\end_layout

\begin_layout Itemize
This paper also proposed a 
\series bold
\emph on
reduced Gaussian grid
\series default
\emph default
 transformation for the velocity fields, since no anti-aliasing is required.
\end_layout

\end_deeper
\begin_layout Itemize
Method 2) Consider Coriolis effect before & at the end of the trajectories
 as part of the velocity field (see ROCHAS, M.
 1990.
 ARPEGE Documentation, Part 2, Ch.
 6 (available from Meteo-France)):
\end_layout

\begin_deeper
\begin_layout Itemize
The Coriolis term is absorbed into the velocity field 
\begin_inset Formula $v+2\Omega\times r$
\end_inset

.
\end_layout

\begin_layout Itemize
Coriolis term is added at departure points and subtracted at arrival points.
\end_layout

\begin_layout Itemize
Approximations of spherical geometry in determination of trajectories according
 to 
\begin_inset CommandInset citation
LatexCommand cite
key "Ritchie1994"
literal "false"

\end_inset

 provided 
\begin_inset Quotes eld
\end_inset

bad
\begin_inset Quotes erd
\end_inset

 results.
\end_layout

\begin_layout Itemize
Avoiding these approximations led to good results, leading this method to
 be the targeted standard three-time-level scheme in IFS (in 1995).
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
ECMWF IFS model:
\end_layout

\begin_deeper
\begin_layout Itemize
The three-level-time SL-SI scheme 
\begin_inset CommandInset citation
LatexCommand cite
key "Ritchie1995"
literal "false"

\end_inset

, operational from 1991 to Dec.
 1996.
\end_layout

\begin_layout Itemize

\series bold
\begin_inset Quotes eld
\end_inset

1997 version
\series default

\begin_inset Quotes erd
\end_inset

: 
\series bold
The two-level-time SL-SI scheme
\series default
 
\begin_inset CommandInset citation
LatexCommand cite
key "Temperton2001"
literal "false"

\end_inset

, operational from Dec.
 1996 to 1998.
\begin_inset Newline newline
\end_inset

Issues: Noise showing up for large time step sizes => Reduction of time
 step size
\end_layout

\end_deeper
\begin_layout Itemize
Hortal developed the Stable Extrapolation Two-Time-Level Scheme (SETTLS)
 scheme 
\begin_inset CommandInset citation
LatexCommand cite
key "Hortal2002"
literal "false"

\end_inset

:
\end_layout

\begin_deeper
\begin_layout Itemize
Tackle problem of extrapolation in a two-level-time SL-SI scheme
\end_layout

\end_deeper
\begin_layout Itemize
Richies 1986, Semi-Lagrangian Advection on a Gaussian Grid 
\begin_inset CommandInset citation
LatexCommand cite
key "Ritchie1986"
literal "false"

\end_inset

.
\end_layout

\begin_deeper
\begin_layout Itemize
Interpolating and non-interpolating SL schemes.
\end_layout

\begin_layout Itemize
TODO: more
\end_layout

\end_deeper
\begin_layout Section
Sidenotes
\end_layout

\begin_layout Itemize
Gaussian grids:
\end_layout

\begin_deeper
\begin_layout Itemize
linear Gaussian grid: No anti-aliasing
\end_layout

\begin_layout Itemize
quadratic Gaussian Grid: Alias-free computation of quadratic terms
\end_layout

\end_deeper
\begin_layout Section
List of symbols
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Symbol
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\frac{d}{dt}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Total derivative
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $F$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PDE 
\begin_inset Formula $F=N+L$
\end_inset

 in total derivative formulation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $N$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nonlinearities without nonlinear advection
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $L$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Linearities
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $R=R(t)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Position
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $V=V(t)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Velocity
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\cdot_{D}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Subscript 
\begin_inset Formula $D$
\end_inset

 for value at departure point
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\cdot_{A}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Subscript 
\begin_inset Formula $A$
\end_inset

 for value at arrival point
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
SWE equation
\end_layout

\begin_layout Standard
Given the velocity-based formulation
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
\frac{\partial\Phi}{\partial t} & =-\nabla\cdot\left(\Phi V\right)\\
\frac{\partial V}{\partial t} & =-\nabla\Phi-fk\times V-V\cdot\nabla V
\end{align*}

\end_inset

and using the total material derivative
\begin_inset Formula 
\[
\frac{D}{Dt}=\frac{\partial}{\partial t}+V\cdot\nabla
\]

\end_inset

we can write
\begin_inset Formula 
\begin{align*}
\frac{D\Phi}{Dt} & =-\Phi\nabla\cdot V\\
\frac{DV}{Dt} & =-\nabla\Phi-fk\times V.
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Using a linearization around 
\begin_inset Formula $\Phi=\overline{\Phi}+\Phi'$
\end_inset

, we get
\begin_inset Formula 
\begin{align*}
\frac{D\Phi'}{Dt} & =-\overline{\Phi}\nabla\cdot V-\Phi'\nabla\cdot V\\
\frac{DV}{Dt} & =-\nabla\Phi'-fk\times V
\end{align*}

\end_inset

and we can split this equation into linear and non-linear parts.
\end_layout

\begin_layout Standard
For a compact notation, let 
\begin_inset Formula $U=(\Phi',V)^{T}=(\Phi',u,v)^{T}$
\end_inset

 be the vector of the vectors of variables.
 We can then write
\begin_inset Formula 
\[
\frac{DU}{Dt}=L_{g}(U)+L_{f}(U)+N_{d}(U)
\]

\end_inset

with the gravity modes
\begin_inset Formula 
\[
L_{g}(U)=\left[\begin{array}{c}
-\overline{\Phi}\nabla\cdot V\\
-\nabla\Phi'
\end{array}\right]
\]

\end_inset

the Coriolis effect
\begin_inset Formula 
\[
L_{f}(U)=\left[\begin{array}{c}
0\\
-fk\times V
\end{array}\right]
\]

\end_inset

and the nonlinear divergence
\begin_inset Formula 
\[
N_{d}(U)=\left[\begin{array}{c}
-\Phi'\nabla\cdot V\\
0
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Section
Angular and Cartesian coordinate systems
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/lat_lon_coordinate_to_cartesian.pdf
	width 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Gaussian-and-Cartesian"

\end_inset

Gaussian and Cartesian coordinate system displaying points and velocity
 basis for given Gaussian angles.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sec:angular_cartesian_conversion"

\end_inset

In this section, we gather the equations required to get from Gaussian space
 to Cartesian space for points and velocities, see Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Gaussian-and-Cartesian"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Subsection
Point: Gaussian 
\begin_inset Formula $\rightarrow$
\end_inset

 Cartesian
\end_layout

\begin_layout Standard
Given a Gaussian coordinate 
\begin_inset Formula $\left(\lambda,\theta\right)$
\end_inset

 the Cartesian coordinate 
\begin_inset Formula $R$
\end_inset

 can be computed via
\begin_inset Formula 
\[
R=\left[\begin{array}{c}
\cos\lambda\cos\theta\\
\sin\lambda\cos\theta\\
\sin\theta
\end{array}\right].
\]

\end_inset


\end_layout

\begin_layout Subsection
Point: Cartesian 
\begin_inset Formula $\rightarrow$
\end_inset

 Gaussian
\end_layout

\begin_layout Standard
Given a Cartesian coordinate 
\begin_inset Formula $R$
\end_inset

, the Gaussian coordinate is given by
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\lambda=\arctan\left(R_{y}/R_{x}\right)+\begin{cases}
\pi & \text{if }R_{x}<0\\
2\pi & \text{if }R_{y}<0\\
0 & \text{else}
\end{cases}
\]

\end_inset

and
\begin_inset Formula 
\[
\theta=\arccos\left(-R_{z}\right)-\pi/2.
\]

\end_inset


\end_layout

\begin_layout Subsection
Velocity: Gaussian 
\begin_inset Formula $\rightarrow$
\end_inset

 Cartesian / Cartesian 
\begin_inset Formula $\rightarrow$
\end_inset

 Gaussian
\end_layout

\begin_layout Standard
Since there's no scaling involved, the transformation matrices for vectors
 (such as velocity) are the same as for point transformations.
\end_layout

\begin_layout Subsection
Velocity basis
\end_layout

\begin_layout Standard
For a velocity given in Cartesian coordinates we first determine the basis
 at the particular lat/lon coordinate 
\begin_inset Formula $R$
\end_inset

.
 On a unit sphere, the first basis vector perpendicular to the surface is
 trivially given by 
\begin_inset Formula $B_{R}=R$
\end_inset

.
 The vector along the longitude is then given by
\begin_inset Formula 
\[
B_{Lon}=\left[\begin{array}{c}
-\sin\lambda\\
\cos\lambda\\
0
\end{array}\right]
\]

\end_inset

where we also see that
\begin_inset Formula 
\begin{align*}
R\cdot B_{Lon} & =\left[\begin{array}{c}
\cos\lambda\cos\theta\\
\sin\lambda\cos\theta\\
\sin\theta
\end{array}\right]\cdot\left[\begin{array}{c}
-\sin\lambda\\
\cos\lambda\\
0
\end{array}\right]\\
 & =-\sin\lambda\cos\lambda\cos\theta+\cos\lambda\sin\lambda\cos\theta=0
\end{align*}

\end_inset

and using the cross product, we get
\begin_inset Formula 
\begin{align*}
B_{Lat} & =B_{Lon}\times R\\
 & =\left[\begin{array}{c}
-\sin\lambda\\
\cos\lambda\\
0
\end{array}\right]\times\left[\begin{array}{c}
\cos\lambda\cos\theta\\
\sin\lambda\cos\theta\\
\sin\theta
\end{array}\right]\\
 & =\left[\begin{array}{c}
\cos\lambda\sin\theta\\
\sin\lambda\sin\theta\\
-\sin\lambda\sin\lambda\cos\theta-\cos\lambda\cos\lambda\cos\theta
\end{array}\right]\\
 & =\left[\begin{array}{c}
\cos\lambda\sin\theta\\
\sin\lambda\sin\theta\\
-\cos\theta
\end{array}\right]
\end{align*}

\end_inset

where we check that 
\begin_inset Formula $B_{Lat}\cdot B_{Lon}=0$
\end_inset

 and
\begin_inset Formula 
\begin{align*}
B_{Lat}\cdot R & =\left[\begin{array}{c}
\cos\lambda\sin\theta\\
\sin\lambda\sin\theta\\
-2\cos\theta
\end{array}\right]\left[\begin{array}{c}
\cos\lambda\cos\theta\\
\sin\lambda\cos\theta\\
\sin\theta
\end{array}\right]\\
 & =\cos^{2}\lambda\sin\theta\cos\theta+\sin^{2}\lambda\sin\theta\cos\theta-\cos\theta\sin\theta\\
 & =\left(\cos^{2}\lambda+\sin^{2}\lambda\right)\sin\theta\cos\theta-\cos\theta\sin\theta\\
 & =0.
\end{align*}

\end_inset

Using dot products, we can gain the lon/lat velocities from the Cartesian
 ones by computing
\begin_inset Formula 
\[
V^{A}(\lambda,\theta,t)=\left[\begin{array}{c}
B_{Lon}^{T}\\
B_{Lat}^{T}\\
B_{R}^{T}
\end{array}\right]V^{C}(\lambda,\theta,t)
\]

\end_inset

with 
\begin_inset Formula $B_{R}^{T}V^{C}=0$
\end_inset

.
\end_layout

\begin_layout Section
Two or three time level scheme
\end_layout

\begin_layout Subsection
Two time level scheme (variant LVL_two)
\end_layout

\begin_layout Standard
Following 
\begin_inset CommandInset citation
LatexCommand cite
key "Hortal2002"
literal "false"

\end_inset

, we write for the variables 
\begin_inset Formula $X$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\frac{dX}{dt}=L+N
\]

\end_inset

with 
\begin_inset Formula $d/dt$
\end_inset

 the total derivative, 
\begin_inset Formula $L$
\end_inset

 the linearized part and 
\begin_inset Formula $N$
\end_inset

 all terms treated as nonlinearities.
\end_layout

\begin_layout Standard
The 1997 version discretized this equation with an averaging as
\begin_inset Formula 
\[
\frac{X_{A}^{t+\Delta t}-X_{D}^{t}}{\Delta t}=\frac{1}{2}\left(L_{A}^{t+\Delta t}+L_{D}^{t}\right)+\frac{1}{2}\left(N_{D}^{t+\frac{\Delta t}{2}}+N_{A}^{t+\frac{\Delta t}{2}}\right).
\]

\end_inset

Subscript 
\begin_inset Formula $A$
\end_inset

 marks the arrival points which are aligned at grid cells and subscript
 
\begin_inset Formula $D$
\end_inset

 marks the departure points which typically require an interpolation.
\end_layout

\begin_layout Subsection
Three time level schemes (variant LVL_three [not implemented])
\end_layout

\begin_layout Standard
We just consider a two-time level scheme here, since the three-level scheme
 don't seem to be used anymore.
\end_layout

\begin_layout Section
Semi-Lagrangian methods
\end_layout

\begin_layout Standard
For all Semi-Lagrangian methods we assume the departure point to be already
 known.
 Calculating the departure point is discussed in Section 
\begin_inset CommandInset ref
LatexCommand eqref
reference "sec:angular_cartesian_conversion"
plural "false"
caps "false"
noprefix "false"

\end_inset

 since the computation of departure points is based on an implicit semi-Lagrangi
an way, hence on the following methods.
\end_layout

\begin_layout Subsection
Two-level-time SL-SI scheme (variant SL_extrapol [not implemented])
\end_layout

\begin_layout Standard
(See 
\begin_inset CommandInset citation
LatexCommand cite
key "Temperton2001"
literal "false"

\end_inset

) Following 
\begin_inset CommandInset citation
LatexCommand cite
key "Hortal2002"
literal "false"

\end_inset

, we write for the variables 
\begin_inset Formula $X$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\frac{dX}{dt}=L+N
\]

\end_inset

with 
\begin_inset Formula $d/dt$
\end_inset

 the total derivative, 
\begin_inset Formula $L$
\end_inset

 the linearized part and 
\begin_inset Formula $N$
\end_inset

 all nonlinearly treated terms.
\end_layout

\begin_layout Standard
The 1997 version discretized this equation with an averaging as
\begin_inset Formula 
\begin{equation}
\frac{X_{A}^{t+\Delta t}-X_{D}^{t}}{\Delta t}=\frac{1}{2}\left(L_{A}^{t+\Delta t}+L_{D}^{t}\right)+\frac{1}{2}\left(N_{D}^{t+\frac{\Delta t}{2}}+N_{A}^{t+\frac{\Delta t}{2}}\right).\label{eq:sl_equation_averaged}
\end{equation}

\end_inset

Subscripts 
\begin_inset Formula $A$
\end_inset

 mark the arrival points which are aligned at grid cells and subscripts
 
\begin_inset Formula $D$
\end_inset

 mark the departure points which typically require an interpolation.
\end_layout

\begin_layout Standard
Superscripts 
\begin_inset Formula $t+\Delta t$
\end_inset

 mark the unknowns at the next time step and 
\begin_inset Formula $t+\frac{\Delta t}{2}$
\end_inset

 mark quantities computed by linear extrapolation in time from variables
 at time 
\begin_inset Formula $t$
\end_inset

 and 
\begin_inset Formula $t-\Delta t$
\end_inset

.
\end_layout

\begin_layout Standard
The movement along the trajectories for a position 
\begin_inset Formula $R$
\end_inset

 and velocity 
\begin_inset Formula $V$
\end_inset

 is given by
\begin_inset Formula 
\[
\frac{dR}{dt}=V.
\]

\end_inset


\end_layout

\begin_layout Standard
In the 1997 version, the arrival point is approximated by
\begin_inset Formula 
\[
R_{A}^{t+\Delta t}\approx R_{D}^{t}+\Delta t\cdot V_{M}^{t+\frac{\Delta t}{2}}
\]

\end_inset

where the departure positions 
\begin_inset Formula $R_{D}$
\end_inset

 are to be computed.
 Here, also the velocities between the time steps is computed by an extrapolatio
n.
 Given the departure points, Eq.
 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:sl_equation_averaged"
plural "false"
caps "false"
noprefix "false"

\end_inset

 can be solved.
 However, for non-constant 
\begin_inset Formula $V$
\end_inset

, this method turned out to be unstable 
\begin_inset CommandInset citation
LatexCommand cite
key "Hortal2002,Durran1999"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsection
SETTLS (variant SL_SETTLS)
\end_layout

\begin_layout Standard
See 
\begin_inset CommandInset citation
LatexCommand cite
key "Hortal2002"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
As a first step, the approximation of the arrival point is based on a 2nd
 order Taylor expansion
\begin_inset Formula 
\begin{align*}
R_{A}^{t+\Delta t} & \approx R_{D}^{t}+\Delta t\cdot\left[\frac{dR}{dt}\right]_{D}^{t}+\frac{(\Delta t)^{2}}{2}\cdot\left[\frac{d^{2}R}{dt^{2}}\right]_{AV}\\
 & =R_{D}^{t}+\Delta t\cdot V_{D}^{t}+\frac{(\Delta t)^{2}}{2}\cdot\left[\frac{dV}{dt}\right]_{AV}
\end{align*}

\end_inset

with 
\begin_inset Formula $AV$
\end_inset

 some average.
 Based on numerical studies, the averaging was chosen to be
\begin_inset Formula 
\[
\left[\frac{dV}{dt}\right]_{AV}\approx\left[\frac{dV}{dt}\right]^{t-\frac{\Delta t}{2}}\approx\frac{V_{A}^{t}-V_{D}^{t-\Delta t}}{\Delta t}.
\]

\end_inset


\end_layout

\begin_layout Standard
Finally, the equation reads
\begin_inset Formula 
\begin{align*}
R_{A}^{t+\Delta t} & \approx R_{D}^{t}+\Delta t\cdot V_{D}^{t}+\frac{(\Delta t)^{2}}{2}\cdot\frac{V_{A}^{t}-V_{D}^{t-\Delta t}}{\Delta t}\\
 & =R_{D}^{t}+\frac{\Delta t}{2}\cdot\left(\left[2V^{t}-V^{t-\Delta t}\right]_{D}+V_{A}^{t}\right).
\end{align*}

\end_inset

Note, that this equation solely depends on the velocity field at time 
\begin_inset Formula $t-\Delta t$
\end_inset

 and at 
\begin_inset Formula $t$
\end_inset

 and that is solved iteratively, similar to 
\begin_inset CommandInset citation
LatexCommand cite
key "Temperton2001"
literal "false"

\end_inset

 to determine the departure points.
 Based on the information in Section 
\begin_inset CommandInset ref
LatexCommand eqref
reference "sec:departure_points"
plural "false"
caps "false"
noprefix "false"

\end_inset

 on departure point, we can use the approximation of the departure point
 to evaluate quantities with 
\begin_inset Formula $[]_{D}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
R_{D}^{t} & \approx R_{A}^{t+\Delta t}-\frac{\Delta t}{2}\cdot\left(\left[\underbrace{2V^{t}-V^{t-\Delta t}}_{\text{extrapolated velocities}}\right]_{D}+V_{A}^{t}\right).\label{eq:settls_departure_point}
\end{align}

\end_inset

Again, this is solved iteratively until the departure point has been determined.
 Based on this, we can use the interpolation at the departure point and
 the same equation to advect other state variables along the Lagrangian
 trajectory with the same equation.
\end_layout

\begin_layout Standard
Using the midpoint trapezoidal rule, we get
\begin_inset Formula 
\begin{equation}
\frac{X_{A}^{t+\Delta t}-X_{D}^{t}}{\Delta t}=\frac{1}{2}\left(L_{A}^{t+\Delta t}+L_{D}^{t}\right)+N_{*}^{t+\frac{1}{2}\Delta t}\label{eq:settls_midpoint_rule}
\end{equation}

\end_inset

with the non-linearities at the half of the trajectory approximated by extrapola
tion
\begin_inset Formula 
\[
N_{*}^{t+\frac{1}{2}\Delta t}=\frac{1}{2}\left(\left[2N^{t}-N^{t-\Delta t}\right]_{D}+N^{t}\right).
\]

\end_inset


\end_layout

\begin_layout Standard
We need to solve Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:settls_midpoint_rule"
plural "false"
caps "false"
noprefix "false"

\end_inset

 which is accomplished by rearranging it to a Helmholtz problem
\begin_inset Formula 
\begin{align*}
X_{A}^{t+\Delta t} & =X_{D}^{t}+\frac{1}{2}\Delta t\left(L_{A}^{t+\Delta t}+L_{D}^{t}\right)+\Delta tN_{*}^{t+\frac{1}{2}\Delta t}\\
\underbrace{X_{A}^{t+\Delta t}-\frac{1}{2}\Delta tL_{A}^{t+\Delta t}}_{\text{Helmholtz problem}} & =\underbrace{X_{D}^{t}+\frac{1}{2}\Delta tL_{D}^{t}+\Delta tN_{*}^{t+\frac{1}{2}\Delta t}}_{\text{K: Right hand side at departure point}}.
\end{align*}

\end_inset

The equation
\begin_inset Formula 
\[
X_{A}^{t+\Delta t}-\frac{1}{2}\Delta tL_{A}^{t+\Delta t}=K
\]

\end_inset

can be solved with an existing backward Euler solver by considering
\begin_inset Formula 
\begin{align*}
\frac{X^{t+\Delta t}-X^{t}}{\Delta t} & =LX^{t+\Delta t},\\
X^{t+\Delta t}-\Delta tLX^{t+\Delta t} & =X^{t}
\end{align*}

\end_inset

hence we can use a half backward Euler solver for the linear parts.
\end_layout

\begin_layout Subsection
Semi-Lagrangian EXP SETTLS (variant SL_EXP_SETTLS)
\end_layout

\begin_layout Standard
See 
\begin_inset CommandInset citation
LatexCommand cite
key "Peixoto2018SLEXP"
literal "false"

\end_inset

.
 Compute
\begin_inset Formula 
\begin{align*}
U_{SLEX}^{n+1} & =e^{\Delta tL}U_{D}^{n}+\Delta te^{\Delta tL}\tilde{N}^{n+\frac{1}{2}}\\
 & =e^{\Delta tL}\left(U_{D}^{n}+\Delta t\tilde{N}^{n+\frac{1}{2}}\right)
\end{align*}

\end_inset

using
\begin_inset Formula 
\[
\tilde{N}_{e}^{n+\frac{1}{2}}=\frac{1}{2}\left[2\tilde{N}^{n}-e^{\Delta tL}\tilde{N}^{n-1}\right]_{D}^{n}+\frac{1}{2}\tilde{N}^{n}.
\]

\end_inset


\end_layout

\begin_layout Itemize
1.
 Step 
\begin_inset Quotes eld
\end_inset

SL
\begin_inset Quotes erd
\end_inset

: Compute departure points used to evaluate 
\begin_inset Formula $[]_{D}$
\end_inset

 terms.
\end_layout

\begin_layout Itemize
2.
 Step 
\begin_inset Quotes eld
\end_inset

U departure
\begin_inset Quotes erd
\end_inset

: Compute 
\begin_inset Formula $U_{D}^{n}$
\end_inset

.
\end_layout

\begin_layout Itemize
3.
 Steps 
\begin_inset Quotes eld
\end_inset

nonlinear
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
a) Compute 
\begin_inset Formula $\tilde{N}$
\end_inset

 and 
\begin_inset Formula $\tilde{N}^{n-1}$
\end_inset

 by evaluating non-linearities (maybe including the Coriolis term).
\end_layout

\begin_layout Itemize
b) Compute 
\begin_inset Formula $\tilde{N}_{D}^{n+\frac{1}{2}}=\left[2\tilde{N}^{n}-e^{\Delta tL}\tilde{N}^{n-1}\right]_{D}$
\end_inset

.
\end_layout

\begin_layout Itemize
c) Compute 
\begin_inset Formula $\tilde{N}_{e}^{n+\frac{1}{2}}=\frac{1}{2}\left(\tilde{N}_{D}^{n+\frac{1}{2}}+\tilde{N}^{n}\right).$
\end_inset


\end_layout

\begin_layout Itemize
d) 
\begin_inset Formula $K=U_{D}^{n}+\Delta t\tilde{N}^{n+\frac{1}{2}}$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
4.
 Step 
\begin_inset Quotes eld
\end_inset

finalize
\begin_inset Quotes erd
\end_inset

: Compute 
\begin_inset Formula $U_{SLEX}^{n+1}=e^{\Delta tL}\left(K\right)$
\end_inset

.
\end_layout

\begin_layout Section
Departure points
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sec:departure_points"

\end_inset

In all methods, an iterative way is used to compute departure point 
\begin_inset Formula $R(t-\Delta t)$
\end_inset

 for given velocity 
\begin_inset Formula $V()$
\end_inset

 and arrival point 
\begin_inset Formula $R(t)$
\end_inset

.
 All points are given in vector space and the origin at a sphere with radius
 
\begin_inset Formula $a$
\end_inset

.
\end_layout

\begin_layout Subsection
General iterative approach to determine the midpoint
\end_layout

\begin_layout Standard
See 
\begin_inset CommandInset citation
LatexCommand cite
key "Ritchie1986"
literal "false"

\end_inset

.
 All approaches are based on an iterative way to approximate the midpoint.
 This is described in the following section.
 Based on the midpoint, it's easy to also get a 2nd order accurate method.
\end_layout

\begin_layout Subsection
Ritchies 1985 version (variant DP_ritchie [not implemented])
\end_layout

\begin_layout Standard
See 
\begin_inset CommandInset citation
LatexCommand cite
key "Ritchie1986"
literal "false"

\end_inset

.
 Richie used an approximated version by first assuming the velocity vector
 in 3D, also tracing it back along this linearized velocity and then projecting
 the resulting point back to the earth's surface.
\end_layout

\begin_layout Subsubsection
Introduction
\end_layout

\begin_layout Standard
This approach starts with a Taylor expansion and and implicit system to
 solve for to compute the departure point
\begin_inset Formula 
\begin{equation}
R^{*}(t)=R(t+\Delta t)-\Delta tV(t)+O(\Delta t²)\label{eq:departure_point_ritchie_taylor-1}
\end{equation}

\end_inset

where 
\begin_inset Formula $R(t+\Delta t)$
\end_inset

 is known and 
\begin_inset Formula $R(t)$
\end_inset

 as well as 
\begin_inset Formula $V(t)$
\end_inset

 need to be computed.
\end_layout

\begin_layout Subsubsection
Computing midpoint of trajectory (via normalization)
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "subsec:ritchie_normalization"

\end_inset

First of all, we assume 
\begin_inset Formula $V(t)$
\end_inset

 to be already available.
 However, 
\begin_inset Formula $R^{*}(t)$
\end_inset

 would still be off the sphere's surface which can be fixed with a normalization
\begin_inset Formula 
\begin{align}
R(t) & =bR^{*}(t)\nonumber \\
 & =b\left(R(t+\Delta t)-\Delta tV(t)\right)\label{eq:iterative_scheme}
\end{align}

\end_inset

and since we require 
\begin_inset Formula $\left|R^{*}(t)\right|=a$
\end_inset

, we get
\begin_inset Formula 
\begin{align*}
l & =\left|R\left(t+\Delta t\right)-\Delta tV\left(t\right)\right|\\
 & =\left(\left(R\left(t+\Delta t\right)-\Delta tV\left(t\right)\right)\cdot\left(R\left(t+\Delta t\right)-\Delta tV\left(t\right)\right)\right)^{1/2}\\
 & =\left(a^{2}-2\Delta tR\left(t+\Delta t\right)V(t)+\Delta t^{2}V\left(t\right)^{2}\right)^{1/2}
\end{align*}

\end_inset

Projecting 
\begin_inset Formula $R(t)$
\end_inset

 on the sphere's surface yields
\begin_inset Formula 
\begin{align*}
R(t) & =\left(R(t+\Delta t)-\Delta tV(t)\right)\cdot\frac{a}{l}\\
 & =\left(R(t+\Delta t)-\Delta tV(t)\right)\cdot\left(1-2\Delta tR\left(t+\Delta t\right)V(t)/a^{2}+\Delta t^{2}V\left(t\right)^{2}/a^{2}\right)^{-1/2}\\
 & =\left(R(t+\Delta t)-\Delta tV(t)\right)\cdot b
\end{align*}

\end_inset

with
\begin_inset Formula 
\begin{equation}
b=\left(1+\Delta t^{2}V\left(t\right)^{2}/a^{2}-2\Delta tV(t)R\left(t+\Delta t\right)/a^{2}\right)^{-1/2}.\label{eq:sl_normalization}
\end{equation}

\end_inset

We can then use Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:departure_point_ritchie_taylor-1"
plural "false"
caps "false"
noprefix "false"

\end_inset


\begin_inset Formula 
\[
R(t+\Delta t)=R(t)+\Delta tV(t)+O(\Delta t²)
\]

\end_inset

to replace 
\begin_inset Formula $R(t+\Delta t)$
\end_inset

 yielding
\begin_inset Formula 
\begin{align}
b & =\left(1+\Delta t^{2}V\left(t\right)^{2}/a^{2}-2\Delta tV(t)\left(R(t)+\Delta tV(t)+O(\Delta t²)\right)/a^{2}\right)^{-1/2}\nonumber \\
 & =\left(1+\Delta t^{2}V\left(t\right)^{2}/a^{2}-2\Delta tV(t)R(t)/a^{2}-2\Delta t^{2}V(t)^{2}/a^{2}-2\Delta tO(\Delta t²)V(t)/a^{2}\right)^{-1/2}\nonumber \\
 & =\left(1-\Delta t^{2}V\left(t\right)^{2}/a^{2}-2\Delta tV(t)R(t)/a^{2}-2\Delta tO(\Delta t²)V(t)/a^{2}\right)^{-1/2}.\label{eq:iterative_b}
\end{align}

\end_inset

Using
\begin_inset Formula 
\begin{align*}
V(t)\cdot R(t) & =\sum_{n}V_{n}(t)R_{n}(t)\\
 & =\sum_{n}\frac{1}{2}\frac{d}{dt}\left(R_{n}(t)\right)^{2}\\
 & =\frac{1}{2}\frac{d}{dt}\sum_{n}\left(R_{n}(t)\right)^{2}\\
 & =\frac{1}{2}\frac{d}{dt}\left(R(t)\cdot R(t)\right)\\
 & =\frac{1}{2}\frac{d}{dt}\left\{ \left|R(t)\right|^{2}\right\} 
\end{align*}

\end_inset

we can simplify the equation to
\begin_inset Formula 
\[
b=\left(1-\Delta t^{2}V\left(t\right)^{2}/a^{2}+O(\Delta t^{3})\right)^{-1/2}.
\]

\end_inset

Next, we use a Taylor series approximation
\begin_inset Formula 
\begin{align*}
f(\Delta t) & =\left(1-\Delta t\right)^{-1/2}\\
 & \approx1+\Delta t\left(-\frac{1}{2}\right)\left(1-0\right)^{-\frac{3}{2}}\left(-1\right)+O(\Delta t^{2})\\
 & =1+\Delta t\frac{1}{2}+O(\Delta t^{2})
\end{align*}

\end_inset

we finally get the correction factor
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Formula 
\[
b=1+\frac{1}{2}\Delta tV\left(t\right)/a+O(\Delta t^{2})
\]

\end_inset


\end_layout

\end_inset

which we can use to compute new location 
\begin_inset Formula $R(t)=b\left(R(t+\Delta t)-\Delta tV(t)\right)$
\end_inset

.
\end_layout

\begin_layout Subsubsection
Midpoint rule
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sec:sl_midpoint_mirrored_vector"

\end_inset

Based on the new departure location 
\begin_inset Formula $R(t)$
\end_inset

 we use this as part of a midpoint rule to compute 
\begin_inset Formula $R(t-\Delta t)$
\end_inset

 using the sketch in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:r_t_dt-1"
plural "false"
caps "false"
noprefix "false"

\end_inset

 where we use 
\begin_inset Formula $R^{n}=R(t+n\Delta t)$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/midpoint_sl_mirrored_vector.pdf
	width 5cm

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:r_t_dt-1"

\end_inset

Sketch to compute 
\begin_inset Formula $R^{-1}=R(t-\Delta t)$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset

We parametrize the vector 
\begin_inset Formula $h(\gamma)=\gamma R^{0}-R^{1}$
\end_inset

 and request it to be orthogonal to 
\begin_inset Formula $b$
\end_inset

 via
\begin_inset Formula 
\begin{align*}
h(\gamma)\cdot R^{0} & =0\\
\left(\gamma R^{0}-R^{1}\right)\cdot R^{0} & =0\\
\gamma R^{0}\cdot R^{0} & =R^{1}\cdot R^{0}\\
\gamma & =\frac{R^{1}\cdot R^{0}}{R^{0}\cdot R^{0}}.
\end{align*}

\end_inset

Finally, we can compute 
\begin_inset Formula $R$
\end_inset

 via
\begin_inset Formula 
\begin{align*}
R^{-1} & =R^{1}+2h\\
 & =R^{1}+2\left(\gamma R^{0}-R^{1}\right)\\
 & =R^{1}+2\left(\frac{R^{1}\cdot R^{0}}{R^{0}\cdot R^{0}}R^{0}-R^{1}\right)\\
 & =R^{1}+2\left(\frac{R^{1}\cdot R^{0}}{R^{0}\cdot R^{0}}R^{0}-R^{1}\right)\\
 & =2\frac{R^{1}\cdot R^{0}}{R^{0}\cdot R^{0}}R^{0}-R^{1}
\end{align*}

\end_inset

and with 
\begin_inset Formula $R^{0}\cdot R^{0}=a^{2}$
\end_inset

 we get
\begin_inset Formula 
\[
R(t-\Delta t)=2\left[R(t)\cdot R(t+\Delta t)/a^{2}\right]R(t)-R(t+\Delta t).
\]

\end_inset


\end_layout

\begin_layout Subsubsection
Full iteration scheme (realization of variant DP_ritchie)
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sec:ritchie1985_full_iteration"

\end_inset

The iteration will solve Eq.
 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:iterative_scheme"
plural "false"
caps "false"
noprefix "false"

\end_inset

 iteratively.
 The iterative scheme with the 
\begin_inset Formula $k$
\end_inset

-th iteration is given by
\begin_inset Formula 
\[
R_{k+1}(t)=b_{k+1}\left(R(t+\Delta t)-\Delta tV_{k+1}(t)\right)
\]

\end_inset

with 
\begin_inset Formula $V_{k+1}(t)$
\end_inset

 to be computed by interpolation.
 The iteration is started with 
\begin_inset Formula $R_{0}(t)=R(t+\Delta t)$
\end_inset

 which is the arrival point.
 Given the Equations in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:angular_cartesian_conversion"
plural "false"
caps "false"
noprefix "false"

\end_inset

 we can compute the velocity 
\begin_inset Formula $V^{C}$
\end_inset

 in Cartesian space and hence solve Eq.
 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:sl_normalization"
plural "false"
caps "false"
noprefix "false"

\end_inset

 
\begin_inset Formula 
\[
b_{k}=\left(1-\Delta t^{2}V_{k}^{C}\left(t\right)^{2}-2\Delta tV_{k}^{C}(t)\cdot R_{k}(t)\right)^{-1/2}.
\]

\end_inset

The iterations 
\begin_inset Formula $R_{k+1}$
\end_inset

 can be executed until sufficient convergence is reached.
 However, two iterations are sufficient to gain 2nd order accuracy.
\end_layout

\begin_layout Standard
Finally, the departure position 
\begin_inset Formula $R(t-\Delta t)$
\end_inset

 can be calculated with a midpoint rule (see Eq.
 
\begin_inset CommandInset ref
LatexCommand eqref
reference "sec:sl_midpoint_mirrored_vector"
plural "false"
caps "false"
noprefix "false"

\end_inset

)
\begin_inset Formula 
\[
R(t-\Delta t)=2\left[R(t)\cdot R(t+\Delta t)/a^{2}\right]R(t)-R(t+\Delta t).
\]

\end_inset

Based on this, we can use the interpolation at the departure point and the
 same equation to advect other state variables along the Lagrangian trajectory
 with the same equation.
\end_layout

\begin_layout Subsection
SETTLS (variant DP_SETTLS)
\end_layout

\begin_layout Standard
This method is based on the SETTLS SL method in Section 
\end_layout

\begin_layout Section
Sphere approximation of trajectory
\end_layout

\begin_layout Standard
This section describes how to approximate the movement of a point for a
 given velocity
\begin_inset Formula 
\[
R(t)=R(t+\Delta t)-\Delta tV(t+\Delta t)
\]

\end_inset

on a sphere.
\end_layout

\begin_layout Subsection
Linear approximation with normalization (SP_normalize)
\end_layout

\begin_layout Standard
This method assumes the velocity to act on the plane planar to the sphere.
 Then, the arrival point is projected back to the sphere with a normalization.
 Section 
\begin_inset CommandInset ref
LatexCommand eqref
reference "sec:angular_cartesian_conversion"
plural "false"
caps "false"
noprefix "false"

\end_inset

 describes this method.
\end_layout

\begin_layout Subsection
Other versions (variant DP_[TODO])
\end_layout

\begin_layout Standard
Other versions basically differ in the way how the velocity vector is applied
 on the arrival point.
 E.g.
 using exact tracing on the sphere's surface.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
[TODO]
\end_layout

\end_inset


\end_layout

\begin_layout Section
Coriolis effect
\end_layout

\begin_layout Subsection
Semi-implicit treatment of Coriolis effect (variant CE_implicit)
\end_layout

\begin_layout Standard
See 
\begin_inset CommandInset citation
LatexCommand cite
key "Cote1988"
literal "false"

\end_inset

, 
\begin_inset CommandInset citation
LatexCommand cite
key "Ritchie1995"
literal "false"

\end_inset

.
 1st discussed method in 
\begin_inset CommandInset citation
LatexCommand cite
key "Temperton1995"
literal "false"

\end_inset

.
 Simply treat it as part of the linear part 
\begin_inset Formula $L$
\end_inset

.
\end_layout

\begin_layout Subsection
SL treatment of Coriolis effect (variant CE_lagrangian)
\end_layout

\begin_layout Standard
See ROCHAS, M.
 1990, 2nd method in 
\begin_inset CommandInset citation
LatexCommand cite
key "Temperton1995"
literal "false"

\end_inset

.
 The underlying idea is to use the definition of the material derivative
\begin_inset Formula 
\[
\frac{D}{Dt}=\frac{\partial}{\partial t}+V\cdot\nabla
\]

\end_inset

and
\begin_inset Formula 
\[
\frac{\partial}{\partial t}fk\times R=fk\times V
\]

\end_inset

to rewrite the momentum equation to
\begin_inset Formula 
\begin{align*}
\frac{DV}{Dt} & =-\nabla\Phi-fk\times V\\
\frac{\partial}{\partial t}V+V\cdot\nabla V & =-\nabla\Phi-\frac{\partial}{\partial t}fk\times R\\
\frac{\partial}{\partial t}V+V\cdot\nabla\left(V+fk\times R\right)+\frac{\partial}{\partial t}fk\times R & =-\nabla\Phi\\
\frac{\partial}{\partial t}\left(V+fk\times R\right)+V\cdot\nabla(V+fk\times R) & =-\nabla\Phi\\
\frac{DV+fk\times R}{Dt} & =-\nabla\Phi.
\end{align*}

\end_inset

According to the aforementioned related work, this takes the calculated
 departure points in the same way as from the previous work.
\end_layout

\begin_layout Standard
However, for the velocities, the the Coriolis effect is added at the departure
 point and simply subtracted again at the arrival points.
 Note, that the 
\begin_inset Formula $R$
\end_inset

 coordinate at the departure and arrival point must be used for this.
\end_layout

\begin_layout Subsection
Nonlinear treatment of Coriolis effect (variant CE_nonlinear)
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
[TODO]
\end_layout

\end_inset


\end_layout

\begin_layout Section
Interpolation order
\end_layout

\begin_layout Standard
The big question here is where to use which order.
 Some particular orders have been inferred for the computation of the trajectory
 and for the interpolation of the state variables 
\end_layout

\begin_layout Subsection
1) Linear
\end_layout

\begin_layout Standard
First order accurate interpolation
\end_layout

\begin_layout Subsection
2) Cubic
\end_layout

\begin_layout Standard
Third order accurate interpolation.
 Limiters might be used.
\end_layout

\begin_layout Section
Linear or quadratic Gaussian grid for interpolation
\end_layout

\begin_layout Subsection
1) Linear Gaussian grid (variant INT_linear)
\end_layout

\begin_layout Standard
Reduced computation costs since no anti-aliasing is required
\end_layout

\begin_layout Subsection
2) Quadratic Gaussian grid (variant INT_quadratic)
\end_layout

\begin_layout Standard
Additional computation costs because of anti-aliasing strategy
\end_layout

\begin_layout Section
Acknowledgements
\end_layout

\begin_layout Standard
Discussions with Nils Wedi, Michail Diamantakis and Pedro Peixoto.
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintCited"
bibfiles "library"
options "bibtotoc,apalike"

\end_inset


\end_layout

\end_body
\end_document
