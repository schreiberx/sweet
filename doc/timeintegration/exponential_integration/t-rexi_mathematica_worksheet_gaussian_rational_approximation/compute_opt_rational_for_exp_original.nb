(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    333551,       6400]
NotebookOptionsPosition[    329090,       6259]
NotebookOutlinePosition[    329647,       6279]
CellTagsIndexPosition[    329604,       6276]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Reduction alg, high precision", "Section",
 CellChangeTimes->{{3.523638633806774*^9, 3.523638638788698*^9}, {
  3.523906477078813*^9, 3.523906482214443*^9}}],

Cell["\<\
This computes the reduced nodes/weights in extended precision, using 60 digits\
\>", "Text",
 CellChangeTimes->{{3.558962571796658*^9, 3.5589625898429203`*^9}, {
  3.558963402037898*^9, 3.55896340596369*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"formMatrixForReductionHalfLine", "[", 
   RowBox[{"r_", ",", "b_"}], "]"}], ":=", "\[IndentingNewLine]", " ", 
  RowBox[{
   RowBox[{"Outer", "[", 
    RowBox[{"Times", ",", 
     RowBox[{"Conjugate", "[", 
      RowBox[{"Sqrt", "[", "b", "]"}], "]"}], ",", 
     RowBox[{"Sqrt", "[", "b", "]"}]}], "]"}], "*", " ", 
   RowBox[{"Outer", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"#1", "+", " ", "#2"}], ")"}]}], "&"}], ",", 
     RowBox[{"Conjugate", "[", "r", "]"}], ",", "r"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.523902966697781*^9, 3.523902996798493*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"computeConEigenvalue", "[", 
   RowBox[{"mat_", ",", "tol_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "matForReduction", ",", "eigenValues", ",", "eigenVectors", ",", 
      "smallEigenvalueIndex", ",", "v", ",", "error"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"matForReduction", " ", "=", " ", 
      RowBox[{
       RowBox[{"Conjugate", "[", "mat", "]"}], " ", ".", " ", "mat"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eigenValues", ",", "eigenVectors"}], "}"}], " ", "=", " ", 
      RowBox[{"Eigensystem", "[", "matForReduction", " ", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"smallEigenvalueIndex", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "<", "tol"}], ")"}], "&"}], "/@", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"Abs", "[", "eigenValues", "]"}], "]"}]}], ",", "True", 
          ",", "1", ",", "1"}], "]"}], "//", "Flatten"}], "//", "First"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"v", " ", "=", " ", 
      RowBox[{"eigenVectors", "[", 
       RowBox[{"[", "smallEigenvalueIndex", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"error", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"matForReduction", " ", ".", " ", "v"}], "-", 
         RowBox[{
          RowBox[{"eigenValues", "[", 
           RowBox[{"[", "smallEigenvalueIndex", "]"}], "]"}], "v"}]}], "//", 
        "Abs"}], "//", "Max"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "error", ",", "v", ",", "eigenValues", ",", "smallEigenvalueIndex"}], 
      "}"}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"findRootsRationalFuncHalfLine", "[", 
   RowBox[{"gamma0_", ",", "w0_", ",", "v_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "r1", ",", "b1", ",", "v1", ",", "w", ",", "x", ",", "f", ",", "a", ",", 
      "delta", ",", "b", ",", "A", ",", "eigs", ",", "roots", ",", 
      "rationalFunc"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"w", " ", "=", " ", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"Sqrt", "[", "w0", "]"}], "]"}], "*", 
       RowBox[{"Conjugate", "[", "v", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x", " ", "=", " ", 
      RowBox[{"-", 
       RowBox[{"Conjugate", "[", "gamma0", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"f", "=", " ", 
        RowBox[{
         RowBox[{"w", "/", 
          RowBox[{"(", 
           RowBox[{"x", "-", "z"}], ")"}]}], "//", "Total"}]}], ";"}], "*)"}],
      "\[IndentingNewLine]", 
     RowBox[{"a", "=", 
      RowBox[{
       RowBox[{"-", "w"}], "/", 
       RowBox[{"Total", "[", "w", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"delta", " ", "=", " ", "x"}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", " ", "=", " ", "x"}], ";", "\[IndentingNewLine]", 
     RowBox[{"A", "=", 
      RowBox[{
       RowBox[{"DiagonalMatrix", "[", "delta", "]"}], "+", " ", 
       RowBox[{"Outer", "[", 
        RowBox[{"Times", ",", "a", ",", "b"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"eigs", "=", 
      RowBox[{"Eigenvalues", "[", "A", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"eigs", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"eigs", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Re", "[", "#", "]"}], ">", 
          RowBox[{"10", "^", 
           RowBox[{"(", 
            RowBox[{"-", "32"}], ")"}]}]}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"eigs", "=", 
        RowBox[{"Delete", "[", 
         RowBox[{"eigs", ",", 
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"Abs", "[", "eigs", "]"}], ",", 
            RowBox[{"Min", "[", 
             RowBox[{"Abs", "[", "eigs", "]"}], "]"}]}], "]"}]}], "]"}]}], 
       ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"roots", " ", "=", 
        RowBox[{"z", "/.", 
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"SetPrecision", "[", 
               RowBox[{"f", ",", "300"}], "]"}], "//", "Together"}], "//", 
             "Numerator"}], "//", 
            RowBox[{
             RowBox[{"NSolve", "[", 
              RowBox[{"#", ",", "z"}], "]"}], "&"}]}], "//", "N"}], ")"}]}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"roots", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{"roots", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "#", "]"}], "<", "1"}], "&"}]}], "]"}], "//",
           "Sort"}], "//", 
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{"#", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "#", "]"}], ">", 
              RowBox[{"10", "^", 
               RowBox[{"-", "8"}]}]}], "&"}]}], "]"}], "&"}]}]}], ";"}], 
      "*)"}], "\[IndentingNewLine]", "eigs"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.523905609093123*^9, 3.523905610827326*^9}, {
  3.523905671500381*^9, 3.523905680881979*^9}, {3.526668137889359*^9, 
  3.5266681407612343`*^9}, {3.548869963399251*^9, 3.548869964244142*^9}, {
  3.558962480886807*^9, 3.558962485099111*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"formMatrixForWeightsHalfLine", "[", "\[Gamma]New_", "]"}], ":=", 
  "\[IndentingNewLine]", "  ", 
  RowBox[{"Outer", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#1", "+", " ", "#2"}], ")"}], "^", "3"}]}], "&"}], ",", 
    RowBox[{"Conjugate", "[", "\[Gamma]New", "]"}], ",", "\[Gamma]New"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.4956533402692137`*^9, 3.4956533426997623`*^9}, {
  3.495653393850471*^9, 3.495653395458618*^9}, {3.5239048628651543`*^9, 
  3.5239048686707077`*^9}, {3.523907522025961*^9, 3.5239075246874933`*^9}, {
  3.5589724628280697`*^9, 3.558972463809256*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"formRhsForWeightsHalfLine", "[", 
   RowBox[{"\[Gamma]_", ",", "\[Gamma]New_", ",", "w_"}], "]"}], ":=", 
  "\[IndentingNewLine]", "  ", 
  RowBox[{
   RowBox[{"Outer", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#1", "+", " ", "#2"}], ")"}], "^", "3"}]}], "&"}], ",", 
     RowBox[{"Conjugate", "[", "\[Gamma]New", "]"}], ",", "\[Gamma]"}], "]"}],
    " ", ".", " ", "w"}]}]], "Input",
 CellChangeTimes->{{3.4956533452214746`*^9, 3.4956533473882313`*^9}, {
  3.5239048771131077`*^9, 3.523904888982005*^9}, {3.523905091242659*^9, 
  3.523905139481915*^9}, {3.558972466066114*^9, 3.558972467233603*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"solveForWeightsHalfLine", "[", 
   RowBox[{"\[Gamma]_", ",", "\[Gamma]New_", ",", "w_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"matrixForWeights", ",", "rhsForWeights"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"matrixForWeights", "=", 
      RowBox[{"formMatrixForWeightsHalfLine", "[", "\[Gamma]New", "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"rhsForWeights", " ", "=", " ", 
      RowBox[{"formRhsForWeightsHalfLine", "[", 
       RowBox[{"\[Gamma]", ",", "\[Gamma]New", ",", "w"}], "]"}]}], ";", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"LinearSolve", "[", 
      RowBox[{"matrixForWeights", ",", "rhsForWeights"}], "]"}]}]}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"computeExpReductionHalfLine", "[", 
   RowBox[{"gamma_", ",", "w_", ",", "tol_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "wH", ",", "gammaH", ",", "matrixForReduction", " ", ",", "v", ",", 
      "rationalFunc", ",", "newNodes", ",", "newWeights", ",", "dataNew", ",",
       "dataOld", ",", "error", ",", "eigenValues", ",", 
      "smallEigenvalueIndex"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"wH", ",", "gammaH"}], "}"}], "=", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"w", ",", "gamma"}], "}"}], "//", 
       RowBox[{
        RowBox[{"SetPrecision", "[", 
         RowBox[{"#", ",", "60"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"matrixForReduction", " ", "=", " ", 
      RowBox[{"formMatrixForReductionHalfLine", "[", 
       RowBox[{"gammaH", ",", "wH"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "error", ",", "v", ",", "eigenValues", ",", "smallEigenvalueIndex"}], 
       "}"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"computeConEigenvalue", "[", 
        RowBox[{"matrixForReduction", ",", "tol"}], "]"}], "//", 
       RowBox[{
        RowBox[{"SetPrecision", "[", 
         RowBox[{"#", ",", "60"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"newNodes", "=", 
      RowBox[{"findRootsRationalFuncHalfLine", "[", 
       RowBox[{"gammaH", ",", "wH", ",", "v"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"newWeights", "=", 
      RowBox[{"solveForWeightsHalfLine", "[", 
       RowBox[{"gammaH", ",", "newNodes", ",", "wH"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"newNodes", ",", "newWeights"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.523905008183663*^9, 3.523905061571034*^9}, {
  3.523905147472843*^9, 3.5239051588877573`*^9}, {3.52390519093719*^9, 
  3.523905226804619*^9}, {3.523905728712413*^9, 3.523905730117828*^9}, {
  3.523905801421751*^9, 3.5239058042420597`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["code for sampling and using Hankel formulation for reduction", "Section",
 CellChangeTimes->{{3.455900501805498*^9, 3.455900536076294*^9}, 
   3.495317437442156*^9, 3.58000780224582*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"computeSingularValueDecomp", "[", 
   RowBox[{"mat_", ",", "tol_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "U", ",", "V", ",", "W", ",", "singularValues", ",", 
      "smallSingValueIndex", ",", "smallSingValue", ",", "v"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"U", ",", "W", ",", "V"}], "}"}], "=", " ", 
      RowBox[{"SingularValueDecomposition", "[", "mat", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"singularValues", " ", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"W", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "i"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "W", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"smallSingValue", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"singularValues", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", "#", "]"}], "<", "tol"}], "&"}], ",", "1"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"smallSingValueIndex", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "<", "tol"}], ")"}], "&"}], "/@", 
           "singularValues"}], ",", "True", ",", "1", ",", "1"}], "]"}], "//",
         "Flatten"}], "//", "First"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"v", " ", "=", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"Conjugate", "[", "U", "]"}], "]"}], "[", 
       RowBox[{"[", "smallSingValueIndex", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "smallSingValueIndex", ",", "smallSingValue", " ", ",", "v", ",", 
       "singularValues"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.495317437443048*^9, 3.580007802247755*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"computeRootsFromEigenVec", "[", "u_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "polynomialForRoots0", ",", "rulesForNodes0", " ", ",", "nodes0", ",", 
      "error0", ",", "accurateNodes0"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"polynomialForRoots0", " ", "=", " ", 
      RowBox[{
       RowBox[{"u", "*", 
        RowBox[{"z", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "u", "]"}], "]"}], "-", "1"}], ")"}]}]}], "//",
        "Total"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rulesForNodes0", " ", "=", " ", 
      RowBox[{"NSolve", "[", 
       RowBox[{"polynomialForRoots0", ",", "z"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nodes0", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"rulesForNodes0", "//", "Flatten"}], ")"}], "/.", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"z", "\[Rule]", "stuff_"}], ")"}], "\[Rule]", "stuff"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"error0", "=", 
      RowBox[{"polynomialForRoots0", "/.", "rulesForNodes0"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"error0", ",", "nodes0"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.45590069124928*^9, {3.461439585157558*^9, 3.461439590423008*^9}, {
   3.461439622830299*^9, 3.461439627794272*^9}, 3.495317437444995*^9, 
   3.496370843099028*^9, 3.580007802250284*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"solveForWeights", "[", 
   RowBox[{"nodes_", ",", "sampledFunc_", ",", "M_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"matrixForWeights0", ",", "V0", ",", "rhsForWeights0"}], " ", 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"matrixForWeights0", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"#", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", "*", "M"}], "+", "1"}], ")"}]}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", "#"}], ")"}]}], "&"}], "[", 
       RowBox[{"Outer", "[", 
        RowBox[{"Times", ",", 
         RowBox[{"Conjugate", "[", "nodes", " ", "]"}], ",", "nodes"}], "]"}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"V0", " ", "=", " ", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "^", 
           RowBox[{"Prepend", "[", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"2", "*", "M"}], "]"}], ",", "0"}], "]"}]}], "&"}], ",",
          "nodes"}], "]"}], "//", "Conjugate"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rhsForWeights0", " ", "=", " ", 
      RowBox[{"V0", " ", ".", " ", "sampledFunc"}]}], ";", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"LinearSolve", "[", 
      RowBox[{"matrixForWeights0", ",", "rhsForWeights0"}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.495317437446908*^9, 3.580007802252808*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"computeExpApproximationUsingHankel", "[", 
   RowBox[{"data_", ",", "tol_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "M", ",", "hankel", ",", "v", ",", "nodesSmall", ",", "error", ",", 
      "nodes", ",", "weights", ",", "expApproxOfData"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"M", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Length", "[", "data", "]"}], "-", "1"}], ")"}], "/", 
       "2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"hankel", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"i", "+", "j", "+", "1"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "M"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "M"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"v", "=", 
      RowBox[{
       RowBox[{"computeSingularValueDecomp", "[", 
        RowBox[{"hankel", ",", "tol"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"nodes", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"computeRootsFromEigenVec", "[", "v", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"#", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", "#", "]"}], "<", "1"}], "&"}]}], "]"}], 
        "&"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"weights", " ", "=", " ", 
      RowBox[{
       RowBox[{"solveForWeights", "[", 
        RowBox[{"nodes", ",", "data", ",", "M"}], "]"}], "//", "Chop"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"expApproxOfData", " ", "=", " ", 
      RowBox[{
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{"weights", " ", 
            RowBox[{"nodes", "^", "#"}]}], "]"}], "&"}], ",", 
         RowBox[{
          RowBox[{"2", "*", "M"}], "+", "1"}], ",", "0"}], "]"}], "//", 
       "Chop"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"error", " ", "=", 
      RowBox[{"data", "-", "expApproxOfData"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"{", 
      RowBox[{"nodes", ",", "weights", ",", "error"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.455913832413146*^9, 3.495317437449135*^9, 
  3.5800078022561617`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"computeExpApproximationUsingHankel", "[", 
   RowBox[{"r_", ",", "b_", ",", "M_", ",", "tol_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "data", ",", "hankel", ",", "v", ",", "nodesSmall", ",", "error", ",", 
      "nodes", ",", "weights", ",", "expApproxOfData"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"data", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Total", "[", 
         RowBox[{"b", " ", 
          RowBox[{"r", "^", 
           RowBox[{"(", 
            RowBox[{"k", "-", "1"}], ")"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", 
          RowBox[{
           RowBox[{"2", "*", "M"}], "+", "1"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"hankel", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"i", "+", "j", "+", "1"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "M"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "M"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"v", "=", 
      RowBox[{
       RowBox[{"computeSingularValueDecomp", "[", 
        RowBox[{"hankel", ",", "tol"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"nodes", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"computeRootsFromEigenVec", "[", "v", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"#", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", "#", "]"}], "<", "1"}], "&"}]}], "]"}], 
        "&"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"weights", " ", "=", " ", 
      RowBox[{
       RowBox[{"solveForWeights", "[", 
        RowBox[{"nodes", ",", "data", ",", "M"}], "]"}], "//", "Chop"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"expApproxOfData", " ", "=", " ", 
      RowBox[{
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{"weights", " ", 
            RowBox[{"nodes", "^", "#"}]}], "]"}], "&"}], ",", 
         RowBox[{
          RowBox[{"2", "*", "M"}], "+", "1"}], ",", "0"}], "]"}], "//", 
       "Chop"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"error", " ", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"data", "-", "expApproxOfData"}], "//", "Abs"}], "//", 
       "Max"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"nodes", ",", "weights", ",", "error"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.496597523552218*^9, 3.496597528927012*^9}, {
   3.49659757913374*^9, 3.496597625791741*^9}, {3.496597835253201*^9, 
   3.496597854875102*^9}, {3.496598011847825*^9, 3.4965980310983143`*^9}, {
   3.496598115253881*^9, 3.496598116715102*^9}, 3.580007802259726*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"LInfinitySolve", "[", 
   RowBox[{"A_", ",", "b_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "m", ",", "n", ",", "Aall", ",", "ball", ",", "c", ",", "x", ",", "bds", 
      ",", "onesT"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"m", ",", "n"}], "}"}], "=", 
      RowBox[{"Dimensions", "[", "A", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"onesT", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"Table", "[", 
        RowBox[{"1", ",", 
         RowBox[{"{", "m", "}"}]}], "]"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Aall", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Join", "[", 
          RowBox[{"onesT", ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"-", "A"}], "]"}]}], "]"}], "]"}], ",", " ", 
        RowBox[{"Transpose", "[", 
         RowBox[{"Join", "[", 
          RowBox[{"onesT", ",", 
           RowBox[{"Transpose", "[", "A", "]"}]}], "]"}], "]"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"ball", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"-", "b"}], ",", "b"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "1", "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", "n", "}"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"bds", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", "+", "1"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x", " ", "=", " ", 
      RowBox[{"LinearProgramming", "[", 
       RowBox[{"c", ",", "Aall", ",", "ball", ",", "bds"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Take", "[", 
      RowBox[{"x", ",", 
       RowBox[{"-", "n"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"interpAtom", "[", 
   RowBox[{"d_", ",", "n_", ",", "x_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"LaguerreL", "[", 
    RowBox[{"n", ",", 
     RowBox[{"1", "/", "2"}], ",", 
     RowBox[{"x", "^", "2"}]}], "]"}], " ", 
   RowBox[{"1", "/", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"Pi", " ", "d"}], "]"}]}], 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"x", "^", "2"}]}], "/", "d"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.580167102429406*^9, 3.580167103998369*^9}, {
  3.580226242410429*^9, 3.580226331694996*^9}, {3.5802372864994783`*^9, 
  3.580237286931458*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Computation of Gaussian approximation of ",
 Cell[BoxData[
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], "4"]}]], 
   RowBox[{"2", " ", 
    SqrtBox["\[Pi]"]}]]],
  CellChangeTimes->{
   3.580227831591044*^9, 3.580236293025568*^9, {3.580236462266468*^9, 
    3.580236490443246*^9}, 3.5802365969182453`*^9, 3.580237102420953*^9, 
    3.5802372745641212`*^9, 3.580237309904976*^9, 3.580237357231709*^9, 
    3.580311782139133*^9, 3.580340117176412*^9, 3.580341029105689*^9, 
    3.580386140367421*^9, 3.5803863687519913`*^9, {3.580500232231469*^9, 
    3.580500238004603*^9}, 3.580508029585939*^9, {3.580765805376458*^9, 
    3.5807658081478863`*^9}, {3.580767663370275*^9, 3.58076769949446*^9}, 
    3.580767749257244*^9, 3.5807678081871367`*^9, 3.581857596513002*^9, 
    3.582645408327284*^9, 3.5842789509759417`*^9, 3.585508711194207*^9, 
    3.6474476703124943`*^9}],
 " in the paper"
}], "Section",
 CellChangeTimes->{{3.647447660053548*^9, 3.6474476687641478`*^9}, {
  3.647447942944708*^9, 3.6474479496556053`*^9}}],

Cell[TextData[{
 "Compute (near) optional rational approximation of the Gaussian ",
 Cell[BoxData[
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], "4"]}]], 
   RowBox[{"2", " ", 
    SqrtBox["\[Pi]"]}]]],
  CellChangeTimes->{
   3.580227831591044*^9, 3.580236293025568*^9, {3.580236462266468*^9, 
    3.580236490443246*^9}, 3.5802365969182453`*^9, 3.580237102420953*^9, 
    3.5802372745641212`*^9, 3.580237309904976*^9, 3.580237357231709*^9, 
    3.580311782139133*^9, 3.580340117176412*^9, 3.580341029105689*^9, 
    3.580386140367421*^9, 3.5803863687519913`*^9, {3.580500232231469*^9, 
    3.580500238004603*^9}, 3.580508029585939*^9, {3.580765805376458*^9, 
    3.5807658081478863`*^9}, {3.580767663370275*^9, 3.58076769949446*^9}, 
    3.580767749257244*^9, 3.5807678081871367`*^9, 3.581857596513002*^9, 
    3.582645408327284*^9, 3.5842789509759417`*^9, 3.585508711194207*^9, 
    3.6474476703124943`*^9}],
 "; note that there is an additional step to get the imaginary part of the \
poles to be aligned with the integers"
}], "Text",
 CellChangeTimes->{{3.647447709317878*^9, 3.647447741986987*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"d0", " ", "=", " ", "4"}], ";"}]], "Input",
 CellChangeTimes->{{3.647451227314597*^9, 3.647451228870925*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gaussian", " ", "=", " ", 
  RowBox[{"interpAtom", "[", 
   RowBox[{"d0", ",", "0", ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQfeK+rdy+Na8cV1x6AqaPZVo6HALSf97bgumnrjtD
QbTaSc9IEK27uC0NROe87gTTz+z2LgXRSh/2gekT/612g+iImk9g+takiqMg
mid7Lpg+k58h8xxISy3dAqb/Zk7+9AVIR0XNB9Mrds5I+QqkL/2fA6YPKVRn
c6995ehR2wSmJcNZO0B03zl+MJ2k3/LeDUjLbVgBpj9rfz17BEgXMv4C06v9
r209CqQrPmXuAtF36mYcANE5PbPB9I76H8dBdNmU/2D66eHqZ191Xjv+EJ8L
pg8cuc39DUjnrvoEpgGao7dG
  "]],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["x", "2"], "4"]}]], 
  RowBox[{"2", " ", 
   SqrtBox["\[Pi]"]}]]], "Output",
 CellChangeTimes->{
  3.580227831591044*^9, 3.580236293025568*^9, {3.580236462266468*^9, 
   3.580236490443246*^9}, 3.5802365969182453`*^9, 3.580237102420953*^9, 
   3.5802372745641212`*^9, 3.580237309904976*^9, 3.580237357231709*^9, 
   3.580311782139133*^9, 3.580340117176412*^9, 3.580341029105689*^9, 
   3.580386140367421*^9, 3.5803863687519913`*^9, {3.580500232231469*^9, 
   3.580500238004603*^9}, 3.580508029585939*^9, {3.580765805376458*^9, 
   3.5807658081478863`*^9}, {3.580767663370275*^9, 3.58076769949446*^9}, 
   3.580767749257244*^9, 3.5807678081871367`*^9, 3.581857596513002*^9, 
   3.582645408327284*^9, 3.5842789509759417`*^9, 3.585508711194207*^9, 
   3.6474476703124943`*^9, {3.647450925943194*^9, 3.647450933283752*^9}, {
   3.647451220641821*^9, 3.6474512321081533`*^9}, 3.647451489687099*^9, 
   3.647451858631617*^9, 3.647451943712669*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"gaussianFT", " ", "=", " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"gaussian", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{"I", " ", "k", " ", "x"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.580226947196954*^9, 3.580226949131311*^9}, {
   3.580227047436116*^9, 3.580227047520937*^9}, {3.580227219820137*^9, 
   3.5802272217152243`*^9}, {3.5802273924805613`*^9, 3.580227392774317*^9}, 
   3.58022783935522*^9, {3.6474509392096233`*^9, 3.647450941440402*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", " ", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pts", " ", "=", " ", 
   RowBox[{"R", " ", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"2", "*", "M"}], "-", "1"}]}], "]"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", " ", "M"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fVals", " ", "=", " ", 
   RowBox[{
    RowBox[{"gaussianFT", "/.", 
     RowBox[{"k", "\[Rule]", "pts"}]}], "//", 
    RowBox[{
     RowBox[{"SetPrecision", "[", 
      RowBox[{"#", ",", "120"}], "]"}], "&"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tol", " ", "=", " ", 
   RowBox[{"10", "^", 
    RowBox[{"-", "11"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"nodes", ",", "weights", ",", "error"}], "}"}], " ", "=", " ", 
   RowBox[{"computeExpApproximationUsingHankel", "[", 
    RowBox[{"fVals", ",", "tol"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alphasAtom", " ", "=", "  ", 
   RowBox[{
    RowBox[{
     RowBox[{"2", " ", "M", " ", 
      RowBox[{
       RowBox[{"Log", "[", "nodes", "]"}], "/", "R"}]}], "//", "N"}], "//", 
    "Conjugate"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"weightsAtom", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"1", "/", "Pi"}], ")"}]}], " ", "weights"}], "//", "N"}], "//",
     "Conjugate"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.5800658544058533`*^9, 3.580065858396291*^9}, {
   3.5800658929479837`*^9, 3.5800659358023148`*^9}, {3.580066657825819*^9, 
   3.58006665851033*^9}, {3.580066695590825*^9, 3.580066695670491*^9}, {
   3.580066845219043*^9, 3.58006684655259*^9}, {3.5800681242045593`*^9, 
   3.580068130139452*^9}, {3.58022638201721*^9, 3.580226383401045*^9}, {
   3.5802264910800257`*^9, 3.5802264911656713`*^9}, 3.5802267257457542`*^9, {
   3.5802269090078793`*^9, 3.580226909478015*^9}, {3.580227134740396*^9, 
   3.5802272161330023`*^9}, 3.580227252344994*^9, {3.580227350669067*^9, 
   3.5802273685735083`*^9}, {3.580228888727084*^9, 3.580228888845591*^9}, {
   3.5802361598593073`*^9, 3.5802361675533524`*^9}, {3.580236486537176*^9, 
   3.580236487131826*^9}, {3.580237774803232*^9, 3.580237775748872*^9}, {
   3.5803118115487413`*^9, 3.5803118118465347`*^9}, {3.580340624773662*^9, 
   3.5803406248573227`*^9}, {3.580340721787525*^9, 3.580340722661118*^9}, {
   3.580340786295217*^9, 3.580340787188286*^9}, {3.580341048751506*^9, 
   3.580341049071497*^9}, {3.580341107125587*^9, 3.580341120602952*^9}, {
   3.5803861682348824`*^9, 3.580386168695654*^9}, 3.580386246000107*^9, {
   3.580386316190041*^9, 3.5803863165938473`*^9}, {3.580765835433104*^9, 
   3.580765835821508*^9}, {3.580765995263557*^9, 3.580765995376071*^9}, {
   3.580766230281556*^9, 3.5807662307077417`*^9}, {3.5807670866378517`*^9, 
   3.580767092376787*^9}, {3.580767212104329*^9, 3.5807672124268923`*^9}, {
   3.580767269918116*^9, 3.580767270000525*^9}, {3.580767667133553*^9, 
   3.580767695826086*^9}, 3.647450955240265*^9}],

Cell[TextData[{
 "Plot the error in the rational approximation of the Gaussian ",
 Cell[BoxData[
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], "4"]}]], 
   RowBox[{"2", " ", 
    SqrtBox["\[Pi]"]}]]],
  CellChangeTimes->{
   3.580227831591044*^9, 3.580236293025568*^9, {3.580236462266468*^9, 
    3.580236490443246*^9}, 3.5802365969182453`*^9, 3.580237102420953*^9, 
    3.5802372745641212`*^9, 3.580237309904976*^9, 3.580237357231709*^9, 
    3.580311782139133*^9, 3.580340117176412*^9, 3.580341029105689*^9, 
    3.580386140367421*^9, 3.5803863687519913`*^9, {3.580500232231469*^9, 
    3.580500238004603*^9}, 3.580508029585939*^9, {3.580765805376458*^9, 
    3.5807658081478863`*^9}, {3.580767663370275*^9, 3.58076769949446*^9}, 
    3.580767749257244*^9, 3.5807678081871367`*^9, 3.581857596513002*^9, 
    3.582645408327284*^9, 3.5842789509759417`*^9, 3.585508711194207*^9, 
    3.6474476703124943`*^9}]
}], "Text",
 CellChangeTimes->{{3.647447689589287*^9, 3.6474477020182333`*^9}, {
  3.647447757381822*^9, 3.647447779685337*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rationalFuncExpr", " ", "=", " ", 
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{"weightsAtom", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"I", " ", "x"}], " ", "+", " ", "alphasAtom"}], ")"}]}], 
     "]"}], "//", "Re"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"rationalFuncExpr", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5802271177737017`*^9, 3.5802271249983397`*^9}, 
   3.580227192300585*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
ar9y8BaeP6QkGLujCv//fRPBXP/v++b/AMKWzcU=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.580227125444963*^9, 3.580227155814373*^9, {3.580227190668454*^9, 
   3.580227192605414*^9}, 3.5802272330404253`*^9, {3.580227359042017*^9, 
   3.5802274009592867`*^9}, 3.580227847684066*^9, 3.58022889589881*^9, 
   3.580236198105174*^9, 3.580236325626979*^9, 3.580236534967956*^9, 
   3.58023662806981*^9, 3.580237129329527*^9, 3.580237328438526*^9, 
   3.580237374024198*^9, 3.5802377855259953`*^9, {3.580311796236547*^9, 
   3.580311822570644*^9}, 3.58034013373897*^9, 3.580340636989007*^9, 
   3.580340736181143*^9, 3.5803407969792137`*^9, {3.580341040641076*^9, 
   3.580341057819832*^9}, 3.580341127415909*^9, {3.5803861540197773`*^9, 
   3.580386177644689*^9}, 3.580386257374105*^9, 3.580386327467922*^9, 
   3.580386378352425*^9, 3.580500253960614*^9, 3.5805080409555273`*^9, {
   3.5807658288772783`*^9, 3.5807658492128773`*^9}, 3.58076602185236*^9, 
   3.580766239740897*^9, 3.580767101060525*^9, 3.580767222923175*^9, 
   3.580767276809904*^9, {3.5807676739730062`*^9, 3.580767707358117*^9}, 
   3.580767757386322*^9, 3.580767815863467*^9, 3.581857611317636*^9, 
   3.581857761217948*^9, 3.581877376696761*^9, 3.582645419413733*^9, 
   3.582829414551497*^9, 3.582908104412006*^9, 3.584278969953128*^9, 
   3.585508721035084*^9, 3.647447679195469*^9, 3.647450970480904*^9, 
   3.647451240368752*^9, 3.647451494423197*^9, 3.647451863159861*^9, 
   3.64745194819995*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rationalFuncExpr", " ", "=", " ", 
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{"weightsAtom", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"I", " ", "x"}], " ", "+", " ", "alphasAtom"}], ")"}]}], 
     "]"}], "//", "Re"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"plotRationalApproxGaussianOpt", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"rationalFuncExpr", "-", "gaussian"}], "//", "Abs"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "25"}], ",", "25"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.580065844252914*^9, 3.580065847689831*^9}, {
   3.5800659616229877`*^9, 3.580065985902066*^9}, {3.580066318573935*^9, 
   3.580066390026857*^9}, {3.580067651840119*^9, 3.580067708253049*^9}, {
   3.5800677814181833`*^9, 3.580067799292303*^9}, {3.5800681172387342`*^9, 
   3.580068119827918*^9}, {3.580164353212467*^9, 3.5801643581590357`*^9}, {
   3.580164530254126*^9, 3.5801645330572777`*^9}, 3.580226441338077*^9, {
   3.580226683672583*^9, 3.580226685943727*^9}, {3.5802270125361013`*^9, 
   3.580227028516922*^9}, {3.5802270587244997`*^9, 3.580227058836296*^9}, {
   3.580227201866849*^9, 3.5802272033595953`*^9}, {3.580227242366836*^9, 
   3.580227243342577*^9}, {3.5802274078097*^9, 3.580227408081622*^9}, 
   3.5802278681964073`*^9, {3.580767106988598*^9, 3.580767108794219*^9}, {
   3.582908843555999*^9, 3.582908852152141*^9}, {3.647447751401204*^9, 
   3.64744775326478*^9}, {3.6474512460602493`*^9, 3.647451247039728*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 7.5*^-14},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.5800659548951197`*^9, 3.580065986146734*^9}, {
   3.580066329773226*^9, 3.580066333261252*^9}, 3.580066390187725*^9, {
   3.5800666549511013`*^9, 3.580066691677856*^9}, {3.580066749193459*^9, 
   3.580066766565226*^9}, 3.5800668547086554`*^9, {3.580067668334065*^9, 
   3.5800677091033697`*^9}, 3.5800677996665697`*^9, 3.58006813682703*^9, 
   3.580068204957555*^9, 3.5800968765004463`*^9, 3.5801642357340517`*^9, 
   3.5801643588865128`*^9, 3.580164534317111*^9, {3.58022642449236*^9, 
   3.5802264420720177`*^9}, 3.580226674582407*^9, {3.5802268955446253`*^9, 
   3.580226915494379*^9}, 3.5802269568497143`*^9, {3.5802270147999153`*^9, 
   3.5802270591651*^9}, {3.580227198335763*^9, 3.580227203703246*^9}, 
   3.580227244028145*^9, {3.580227361025462*^9, 3.580227373068769*^9}, {
   3.580227403856702*^9, 3.580227408392983*^9}, 3.5802278690091763`*^9, 
   3.580228898189942*^9, 3.580236201175633*^9, 3.580236330169058*^9, 
   3.58023653719867*^9, 3.5802366309221563`*^9, 3.580237132566592*^9, 
   3.580237336416739*^9, 3.5802373795444107`*^9, 3.5802377926857147`*^9, {
   3.5803117995226107`*^9, 3.58031182634409*^9}, 3.580340137686039*^9, 
   3.5803406401229057`*^9, 3.58034073915814*^9, 3.5803407997670193`*^9, {
   3.580341044231226*^9, 3.580341059378357*^9}, 3.5803411294770613`*^9, {
   3.580386157731174*^9, 3.580386180456604*^9}, 3.580386260153739*^9, 
   3.5803863291029263`*^9, 3.580386380318984*^9, 3.580482614906437*^9, 
   3.580500257249803*^9, 3.580508044474957*^9, {3.580765831425638*^9, 
   3.580765851742239*^9}, 3.580766022051759*^9, 3.5807662399095097`*^9, {
   3.580767102645794*^9, 3.580767109089888*^9}, 3.580767224492324*^9, 
   3.58076727699251*^9, {3.58076767617015*^9, 3.5807677096414003`*^9}, 
   3.580767758534363*^9, 3.580767816106577*^9, 3.58185776316986*^9, 
   3.581877379223929*^9, 3.582645419695396*^9, 3.582829416652647*^9, 
   3.5829081098602037`*^9, {3.5829088399621277`*^9, 3.582908853068543*^9}, 
   3.584278970226564*^9, 3.585508748676161*^9, 3.647447766133728*^9, 
   3.647450971922762*^9, {3.647451242752877*^9, 3.647451247564722*^9}, 
   3.6474514945001097`*^9, 3.647451863239048*^9, 3.647451948278964*^9}]
}, Open  ]],

Cell[TextData[{
 "Now, construct the rational approximation of rational approximation of the \
Gaussian ",
 Cell[BoxData[
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], "4"]}]], 
   RowBox[{"2", " ", 
    SqrtBox["\[Pi]"]}]]],
  CellChangeTimes->{
   3.580227831591044*^9, 3.580236293025568*^9, {3.580236462266468*^9, 
    3.580236490443246*^9}, 3.5802365969182453`*^9, 3.580237102420953*^9, 
    3.5802372745641212`*^9, 3.580237309904976*^9, 3.580237357231709*^9, 
    3.580311782139133*^9, 3.580340117176412*^9, 3.580341029105689*^9, 
    3.580386140367421*^9, 3.5803863687519913`*^9, {3.580500232231469*^9, 
    3.580500238004603*^9}, 3.580508029585939*^9, {3.580765805376458*^9, 
    3.5807658081478863`*^9}, {3.580767663370275*^9, 3.58076769949446*^9}, 
    3.580767749257244*^9, 3.5807678081871367`*^9, 3.581857596513002*^9, 
    3.582645408327284*^9, 3.5842789509759417`*^9, 3.585508711194207*^9, 
    3.6474476703124943`*^9}],
 " where the imaginary part of the poles are integers"
}], "Text",
 CellChangeTimes->{{3.64744777332393*^9, 3.647447812066244*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"alphaReMin", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"alphasAtom", "//", "Re"}], "//", "Abs"}], "//", "Min"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alphaReMax", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"alphasAtom", "//", "Re"}], "//", "Abs"}], "//", "Max"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alphaReAv", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"alphaReMin", "+", "alphaReMax"}], ")"}], "/", "2"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.580066880532073*^9, 3.580066957003943*^9}, {
  3.580067152873457*^9, 3.580067156703039*^9}, {3.5800677212923727`*^9, 
  3.580067723642585*^9}, {3.580067805177459*^9, 3.5800678075429277`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"alphasAtom", "//", "Length"}]}]], "Input",
 CellChangeTimes->{{3.5829082233239183`*^9, 3.582908225083208*^9}}],

Cell[BoxData["13"], "Output",
 CellChangeTimes->{3.582908225453967*^9, 3.584278978816923*^9, 
  3.647447815399342*^9, 3.647450975765304*^9, 3.647451250594549*^9, 
  3.647451494554694*^9, 3.647451863281348*^9, 3.647451948302701*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"alphasAtom", "//", "N"}]}]], "Input",
 CellChangeTimes->{{3.5829083111127872`*^9, 3.5829083112379093`*^9}, {
  3.582908358030875*^9, 3.5829083848268423`*^9}, {3.5829084200697317`*^9, 
  3.582908420228201*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "4.315321510875024`"}], "+", 
    RowBox[{"7.097812295140816`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.315321510875024`"}], "-", 
    RowBox[{"7.097812295140816`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.421723015913975`"}], "+", 
    RowBox[{"5.600740225255293`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.421723015913975`"}], "-", 
    RowBox[{"5.600740225255293`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.493645084662803`"}], "+", 
    RowBox[{"4.337823602355636`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.493645084662803`"}], "-", 
    RowBox[{"4.337823602355636`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.543988823306033`"}], "+", 
    RowBox[{"3.1857095527392008`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.543988823306033`"}], "-", 
    RowBox[{"3.1857095527392008`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.577702118253584`"}], "+", 
    RowBox[{"2.0954803732651626`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.577702118253584`"}], "-", 
    RowBox[{"2.0954803732651626`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.597172083549668`"}], "+", 
    RowBox[{"1.0398691472326393`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.597172083549668`"}], "-", 
    RowBox[{"1.0398691472326393`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"-", "4.6035467844377465`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.581877402790612*^9, 3.582645426624372*^9, 3.582829422697089*^9, {
   3.582908360632255*^9, 3.582908377782852*^9}, 3.582908420607813*^9, 
   3.584278979368647*^9, 3.647447816431819*^9, 3.647450976360375*^9, 
   3.647451251989829*^9, 3.6474514945707283`*^9, 3.64745186331046*^9, 
   3.6474519483378153`*^9}]
}, Open  ]],

Cell["\<\
Redefining poles, finding residues through convex optimization\
\>", "Text",
 CellChangeTimes->{{3.581877526971443*^9, 3.581877541953773*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gamma", "=", " ", 
   RowBox[{
    RowBox[{"-", "alphaReMin"}], "+", 
    RowBox[{"I", " ", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"-", "11"}], ",", "11"}], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.580493784248539*^9, 3.580493823437613*^9}, {
  3.580493889069625*^9, 3.580493890251884*^9}, {3.5807658590038033`*^9, 
  3.5807658606411257`*^9}, {3.580765917018282*^9, 3.580765918487606*^9}, {
  3.580766174848198*^9, 3.5807661768037453`*^9}, {3.580767142230256*^9, 
  3.580767168386551*^9}, {3.6474508292982283`*^9, 3.6474508396393843`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"N1", " ", "=", " ", "800"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xPts1", " ", "=", " ", 
   RowBox[{"60", " ", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"-", "N1"}], ",", "N1"}], "]"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", "N1"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N2", " ", "=", " ", "60"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xPts2", " ", "=", " ", 
   RowBox[{
    RowBox[{"90", " ", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "N2"}], "]"}], "/", "N2"}]}], " ", "+", " ", 
    "15"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xPts3", " ", "=", " ", 
   RowBox[{"-", 
    RowBox[{"Reverse", "[", "xPts2", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xPts", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{"xPts3", ",", "xPts1", ",", "xPts2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tau", " ", "=", " ", 
   RowBox[{"Re", "[", "gamma", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theta", " ", "=", " ", 
   RowBox[{"Im", "[", "gamma", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.5800547359912767`*^9, 3.580054865386463*^9}, {
   3.580054951878841*^9, 3.580055103550338*^9}, {3.580055144738554*^9, 
   3.580055144921915*^9}, {3.580055489651844*^9, 3.5800554903615627`*^9}, {
   3.580060663685458*^9, 3.580060692872898*^9}, {3.5800607304312077`*^9, 
   3.580060745735121*^9}, {3.580062482576008*^9, 3.5800624853412313`*^9}, {
   3.580063464352975*^9, 3.580063464470846*^9}, {3.580064666800221*^9, 
   3.580064694923588*^9}, {3.5800647300531054`*^9, 3.580064730355064*^9}, {
   3.580064880321546*^9, 3.580064901830182*^9}, {3.580065029062016*^9, 
   3.580065029803073*^9}, {3.580067020939775*^9, 3.580067020992249*^9}, {
   3.580067383571062*^9, 3.58006738436933*^9}, {3.580067426402013*^9, 
   3.580067426544202*^9}, {3.58006807150697*^9, 3.580068074800426*^9}, {
   3.58006845244867*^9, 3.58006845394496*^9}, {3.580068611682322*^9, 
   3.580068614881385*^9}, {3.58006865544382*^9, 3.580068655680863*^9}, {
   3.580068700350164*^9, 3.580068708120749*^9}, {3.580164577003148*^9, 
   3.580164590416048*^9}, {3.580164987374432*^9, 3.5801649899673023`*^9}, {
   3.58016510772403*^9, 3.5801651596125183`*^9}, {3.580165214701185*^9, 
   3.580165333378281*^9}, {3.580166443526325*^9, 3.580166447725009*^9}, {
   3.580166504686063*^9, 3.580166506363096*^9}, 3.580227489952715*^9, {
   3.58022787867339*^9, 3.5802278791763287`*^9}, {3.580227981776928*^9, 
   3.580228012309293*^9}, 3.580228048484746*^9, {3.5802281988801107`*^9, 
   3.580228207983292*^9}, {3.580228246326624*^9, 3.580228246510639*^9}, {
   3.580228287902467*^9, 3.580228289213523*^9}, {3.5802283329974422`*^9, 
   3.5802283330835867`*^9}, {3.5802362150385838`*^9, 3.580236224637343*^9}, {
   3.580236710993351*^9, 3.580236730020256*^9}, {3.5802368136300993`*^9, 
   3.5802368229632273`*^9}, {3.580236930776188*^9, 3.580236963367078*^9}, 
   3.5802375115829563`*^9, {3.5802376364110527`*^9, 3.580237636466587*^9}, {
   3.580237803710741*^9, 3.5802378213632*^9}, {3.580237923572938*^9, 
   3.5802379236739798`*^9}, {3.580238225763729*^9, 3.580238227323309*^9}, {
   3.58023883609657*^9, 3.5802388433563347`*^9}, {3.580238914942346*^9, 
   3.580238915052299*^9}, {3.58023900681793*^9, 3.580239017726918*^9}, {
   3.580239325754669*^9, 3.5802393906701117`*^9}, {3.580311865686634*^9, 
   3.580311878317986*^9}, {3.580311962067944*^9, 3.5803119779229937`*^9}, {
   3.5807660853131437`*^9, 3.580766098730699*^9}, {3.580766294885189*^9, 
   3.5807663281287737`*^9}, {3.580766364999769*^9, 3.580766376806986*^9}, {
   3.580767341977474*^9, 3.580767343478896*^9}, {3.647450995291491*^9, 
   3.647450997843768*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"b", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"gaussian", "/.", 
      RowBox[{"x", "\[Rule]", "xPts"}]}], "//", 
     RowBox[{
      RowBox[{"SetPrecision", "[", 
       RowBox[{"#", ",", "120"}], "]"}], "&"}]}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xPts", " ", "=", " ", 
   RowBox[{"N", "[", "xPts", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Length", "[", "xPts", "]"}], ",", 
       RowBox[{"2", "*", 
        RowBox[{"Length", "[", "tau", "]"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"1", ";;", 
       RowBox[{"Length", "[", "xPts", "]"}]}], ",", 
      RowBox[{"1", ";;", 
       RowBox[{"Length", "[", "tau", "]"}]}]}], "]"}], "]"}], " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"xPts", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", "-", " ", 
        RowBox[{"theta", "[", 
         RowBox[{"[", "j", "]"}], "]"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xPts", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", "-", " ", 
           RowBox[{"theta", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], ")"}], "^", "2"}], "+", 
        RowBox[{
         RowBox[{"tau", "[", 
          RowBox[{"[", "j", "]"}], "]"}], "^", "2"}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "xPts", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "tau", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"1", ";;", 
       RowBox[{"Length", "[", "xPts", "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "tau", "]"}], "+", "1"}], ";;", 
       RowBox[{"2", "*", 
        RowBox[{"Length", "[", "tau", "]"}]}]}]}], "]"}], "]"}], " ", "=", 
   " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", " ", 
       RowBox[{"tau", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xPts", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", "-", " ", 
           RowBox[{"theta", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], ")"}], "^", "2"}], "+", 
        RowBox[{
         RowBox[{"tau", "[", 
          RowBox[{"[", "j", "]"}], "]"}], "^", "2"}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "xPts", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "tau", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.580068286782942*^9, 3.5800682925453176`*^9}, {
   3.5800684919759912`*^9, 3.580068492432164*^9}, {3.580164610289505*^9, 
   3.580164613385602*^9}, 3.580164751767997*^9, 3.580227473919957*^9, {
   3.580227509195744*^9, 3.580227527121961*^9}, {3.580227810973814*^9, 
   3.580227811100848*^9}, 3.5802279380829077`*^9, 3.6474511753178997`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"w1", " ", "=", " ", 
  RowBox[{"LInfinitySolve", "[", 
   RowBox[{"A", ",", "b"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5800645105015697`*^9, 3.580064515262293*^9}, {
  3.580227945196093*^9, 3.580227945699608*^9}, {3.580236831087263*^9, 
  3.58023683171098*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.77075431662228`*^-8"}], ",", "9.105375434750162`*^-7", ",", 
   RowBox[{"-", "7.073284346322969`*^-7"}], ",", 
   RowBox[{"-", "0.0000112564827639346`"}], ",", "0.0000316278486761932`", 
   ",", "0.00047282220513073084`", ",", 
   RowBox[{"-", "0.017839810396560574`"}], ",", "0.12327042473830248`", ",", 
   "0.1877130220537587`", ",", 
   RowBox[{"-", "3.2034715228495942`"}], ",", "6.123755543580666`", ",", 
   "0.`", ",", 
   RowBox[{"-", "6.123755841848161`"}], ",", "3.2034712658530275`", ",", 
   RowBox[{"-", "0.18771238018072134`"}], ",", 
   RowBox[{"-", "0.12326987628935386`"}], ",", "0.017839242222443888`", ",", 
   RowBox[{"-", "0.0004731874917343858`"}], ",", 
   RowBox[{"-", "0.000031358475831136815`"}], ",", "0.000011341571201752273`",
    ",", "6.517457477594937`*^-7", ",", 
   RowBox[{"-", "9.128496023863376`*^-7"}], ",", "2.954309729192276`*^-8", 
   ",", "1.0845749544592896`*^-7", ",", 
   RowBox[{"-", "1.858753344202957`*^-8"}], ",", 
   RowBox[{"-", "3.6743713227243024`*^-6"}], ",", "2.7990058083347696`*^-6", 
   ",", 
   RowBox[{"-", "0.000014918577548849352`"}], ",", "0.0010751767283285608`", 
   ",", 
   RowBox[{"-", "0.003816465653840016`"}], ",", 
   RowBox[{"-", "0.12124105653274578`"}], ",", "0.9774980792734348`", ",", 
   RowBox[{"-", "1.3432866123333178`"}], ",", 
   RowBox[{"-", "4.072408546157305`"}], ",", "9.442699917778205`", ",", 
   RowBox[{"-", "4.072408620272648`"}], ",", 
   RowBox[{"-", "1.3432860877712938`"}], ",", "0.9774985292598916`", ",", 
   RowBox[{"-", "0.1212417070363373`"}], ",", 
   RowBox[{"-", "0.0038169724770333343`"}], ",", "0.0010756025812659208`", 
   ",", 
   RowBox[{"-", "0.000014713754789095218`"}], ",", "2.659323898804944`*^-6", 
   ",", 
   RowBox[{"-", "3.6970377676364553`*^-6"}], ",", 
   RowBox[{"-", "3.883933649142257`*^-9"}], ",", "1.0816457995911385`*^-7"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.580064535170343*^9, 3.5800646814994926`*^9, 3.5800647159998617`*^9, 
   3.580064746242711*^9, 3.580064890555317*^9, 3.580065010583037*^9, 
   3.580065169115333*^9, 3.580067319251115*^9, 3.580067423426282*^9, 
   3.580067476690493*^9, 3.580068020286908*^9, 3.5800680828995047`*^9, 
   3.580068303646966*^9, 3.580068473726293*^9, {3.580068597477314*^9, 
   3.580068620877062*^9}, 3.5800686638420057`*^9, 3.580068719332101*^9, 
   3.5800969575435762`*^9, 3.580164765144681*^9, 3.5801653635637407`*^9, 
   3.580166120635598*^9, 3.5801662279676437`*^9, 3.580166280649601*^9, 
   3.580166398350396*^9, 3.580166477134573*^9, 3.580166529141189*^9, 
   3.58022745705717*^9, 3.580227542487258*^9, 3.580227701440683*^9, 
   3.580227893385475*^9, 3.580227956556437*^9, 3.580227996691309*^9, 
   3.5802281777058563`*^9, 3.5802282312590837`*^9, 3.580228270580699*^9, 
   3.580228327274927*^9, 3.580228434959894*^9, 3.580228520893876*^9, 
   3.580228557905279*^9, 3.580228695418858*^9, 3.580229037661681*^9, 
   3.580236252885458*^9, 3.5802363665523376`*^9, 3.580236569120789*^9, 
   3.58023667601196*^9, 3.580236752015325*^9, 3.58023691214966*^9, 
   3.580237052179246*^9, 3.580237261843749*^9, 3.5802374865681133`*^9, 
   3.580237614219743*^9, 3.5802377461676064`*^9, 3.580237877822294*^9, 
   3.580237943933735*^9, 3.580238172861993*^9, 3.580238272041551*^9, 
   3.5802386231847057`*^9, 3.58023871024751*^9, 3.580238818432664*^9, {
   3.58023890766304*^9, 3.580238932241768*^9}, 3.580238982359181*^9, {
   3.580239082903346*^9, 3.580239102392419*^9}, 3.58023927299938*^9, 
   3.580239350131535*^9, 3.580239505369361*^9, 3.580311931334413*^9, 
   3.580312009649012*^9, 3.5803402043096857`*^9, 3.580340667685478*^9, 
   3.580340762593224*^9, 3.580340821317623*^9, 3.580341085727158*^9, 
   3.580341148899283*^9, 3.580386210587893*^9, 3.580386285929994*^9, 
   3.5803863511615562`*^9, 3.580386398595022*^9, 3.580482638424213*^9, 
   3.580490827294685*^9, 3.5804938832615013`*^9, 3.580494833036376*^9, 
   3.580500282627925*^9, 3.580508075861238*^9, 3.580765891105192*^9, 
   3.5807659662072163`*^9, 3.580766062800914*^9, 3.58076613893008*^9, 
   3.580766197388736*^9, 3.5807662596481*^9, 3.580766319685318*^9, 
   3.580766351713336*^9, 3.580766397264598*^9, 3.580767153874115*^9, 
   3.580767197049479*^9, 3.580767252563394*^9, 3.580767309629817*^9, 
   3.58076736627151*^9, 3.580767733532076*^9, 3.580767794552034*^9, 
   3.580767844551108*^9, 3.581857831295166*^9, {3.581877594100383*^9, 
   3.581877625337297*^9}, 3.582645458748465*^9, 3.582909501119347*^9, 
   3.584279047502563*^9, 3.5855087862847147`*^9, {3.647447837495034*^9, 
   3.6474478608809023`*^9}, 3.64745085363209*^9, {3.6474509855103407`*^9, 
   3.647451010171362*^9}, {3.647451180417885*^9, 3.647451201962879*^9}, 
   3.6474512699682617`*^9, 3.647451505264398*^9, 3.647451874078908*^9, 
   3.6474519590799093`*^9}]
}, Open  ]],

Cell["Here a are residues corresponding to new poles", "Text",
 CellChangeTimes->{{3.581877618498399*^9, 3.581877629199936*^9}, 
   3.6474507806096573`*^9, {3.64745084954256*^9, 3.6474508571195087`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", " ", "=", " ", 
   RowBox[{
    RowBox[{"w1", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "w1", "]"}], "/", "2"}], "+", "1"}], ";;", 
       RowBox[{"Length", "[", "w1", "]"}]}], "]"}], "]"}], "+", 
    RowBox[{"I", " ", 
     RowBox[{"w1", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", 
        RowBox[{
         RowBox[{"Length", "[", "w1", "]"}], "/", "2"}]}], "]"}], "]"}]}]}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", " ", "=", " ", 
   RowBox[{"-", "a"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.580064552168007*^9, {3.5800647939792624`*^9, 3.580064802288787*^9}, 
   3.580164814413813*^9, {3.5802276249018583`*^9, 3.580227647190359*^9}, {
   3.580227722763144*^9, 3.58022774460341*^9}, {3.5802392851820498`*^9, 
   3.58023928762962*^9}, {3.64745078465265*^9, 3.647450791528576*^9}}],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{{3.580388233884884*^9, 3.580388234694058*^9}, {
   3.581857836342203*^9, 3.581857836797014*^9}, 3.647450795220518*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1.0845749544592896`*^-7"}], "+", 
    RowBox[{"2.77075431662228`*^-8", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"1.858753344202957`*^-8", "-", 
    RowBox[{"9.105375434750162`*^-7", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"3.6743713227243024`*^-6", "+", 
    RowBox[{"7.073284346322969`*^-7", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "2.7990058083347696`*^-6"}], "+", 
    RowBox[{"0.0000112564827639346`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.000014918577548849352`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.0000316278486761932`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.0010751767283285608`"}], "-", 
    RowBox[{"0.00047282220513073084`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.003816465653840016`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.017839810396560574`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.12124105653274578`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.12327042473830248`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.9774980792734348`"}], "-", 
    RowBox[{"0.1877130220537587`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"1.3432866123333178`", "\[VeryThinSpace]", "+", 
    RowBox[{"3.2034715228495942`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"4.072408546157305`", "\[VeryThinSpace]", "-", 
    RowBox[{"6.123755543580666`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "9.442699917778205`"}], "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"4.072408620272648`", "\[VeryThinSpace]", "+", 
    RowBox[{"6.123755841848161`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"1.3432860877712938`", "\[VeryThinSpace]", "-", 
    RowBox[{"3.2034712658530275`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.9774985292598916`"}], "+", 
    RowBox[{"0.18771238018072134`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.1212417070363373`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.12326987628935386`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.0038169724770333343`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.017839242222443888`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.0010756025812659208`"}], "+", 
    RowBox[{"0.0004731874917343858`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.000014713754789095218`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.000031358475831136815`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "2.659323898804944`*^-6"}], "-", 
    RowBox[{"0.000011341571201752273`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"3.6970377676364553`*^-6", "-", 
    RowBox[{"6.517457477594937`*^-7", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"3.883933649142257`*^-9", "+", 
    RowBox[{"9.128496023863376`*^-7", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.0816457995911385`*^-7"}], "-", 
    RowBox[{"2.954309729192276`*^-8", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.580388234852783*^9, 3.580388265753565*^9, 
  3.580482638560541*^9, 3.580500286578511*^9, 3.580508079113428*^9, 
  3.580765894754857*^9, 3.580765970266939*^9, 3.580766066749916*^9, 
  3.580766142839326*^9, 3.5807662001120377`*^9, 3.580766263146199*^9, 
  3.580766355979095*^9, 3.5807663994346113`*^9, 3.580767153997127*^9, 
  3.5807671971848907`*^9, 3.580767254944942*^9, 3.580767309762536*^9, 
  3.580767369730197*^9, 3.580767737658495*^9, 3.580767794687913*^9, 
  3.580767844777028*^9, 3.5818578371757298`*^9, 3.581877634623703*^9, 
  3.582645459058408*^9, 3.582829432682807*^9, 3.582909508600791*^9, 
  3.584279069233474*^9, 3.585508790076352*^9, 3.6474478610152893`*^9, 
  3.647450860143017*^9, 3.64745101290827*^9, 3.647451270967243*^9, 
  3.647451505504231*^9, 3.647451874324566*^9, 3.647451959250359*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Finally, here is the final rational approximation of ",
 Cell[BoxData[
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], "4"]}]], 
   RowBox[{"2", " ", 
    SqrtBox["\[Pi]"]}]]],
  CellChangeTimes->{
   3.580227831591044*^9, 3.580236293025568*^9, {3.580236462266468*^9, 
    3.580236490443246*^9}, 3.5802365969182453`*^9, 3.580237102420953*^9, 
    3.5802372745641212`*^9, 3.580237309904976*^9, 3.580237357231709*^9, 
    3.580311782139133*^9, 3.580340117176412*^9, 3.580341029105689*^9, 
    3.580386140367421*^9, 3.5803863687519913`*^9, {3.580500232231469*^9, 
    3.580500238004603*^9}, 3.580508029585939*^9, {3.580765805376458*^9, 
    3.5807658081478863`*^9}, {3.580767663370275*^9, 3.58076769949446*^9}, 
    3.580767749257244*^9, 3.5807678081871367`*^9, 3.581857596513002*^9, 
    3.582645408327284*^9, 3.5842789509759417`*^9, 3.585508711194207*^9, 
    3.6474476703124943`*^9}],
 " "
}], "Subsection",
 CellChangeTimes->{{3.647447889081932*^9, 3.647447908502554*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", "gamma"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "4.315321510875024`"}], "-", 
    RowBox[{"11.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.315321510875024`"}], "-", 
    RowBox[{"10.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.315321510875024`"}], "-", 
    RowBox[{"9.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.315321510875024`"}], "-", 
    RowBox[{"8.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.315321510875024`"}], "-", 
    RowBox[{"7.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.315321510875024`"}], "-", 
    RowBox[{"6.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.315321510875024`"}], "-", 
    RowBox[{"5.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.315321510875024`"}], "-", 
    RowBox[{"4.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.315321510875024`"}], "-", 
    RowBox[{"3.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.315321510875024`"}], "-", 
    RowBox[{"2.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.315321510875024`"}], "-", 
    RowBox[{"1.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"-", "4.315321510875024`"}], ",", 
   RowBox[{
    RowBox[{"-", "4.315321510875024`"}], "+", 
    RowBox[{"1.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.315321510875024`"}], "+", 
    RowBox[{"2.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.315321510875024`"}], "+", 
    RowBox[{"3.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.315321510875024`"}], "+", 
    RowBox[{"4.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.315321510875024`"}], "+", 
    RowBox[{"5.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.315321510875024`"}], "+", 
    RowBox[{"6.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.315321510875024`"}], "+", 
    RowBox[{"7.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.315321510875024`"}], "+", 
    RowBox[{"8.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.315321510875024`"}], "+", 
    RowBox[{"9.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.315321510875024`"}], "+", 
    RowBox[{"10.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.315321510875024`"}], "+", 
    RowBox[{"11.`", " ", "\[ImaginaryI]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.647450894438973*^9, 3.647451017126216*^9, 
  3.647451273226008*^9, 3.647451505523179*^9, 3.6474518743395767`*^9, 
  3.647451959281879*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{3.6474508952194357`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1.0845749544592896`*^-7"}], "+", 
    RowBox[{"2.77075431662228`*^-8", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"1.858753344202957`*^-8", "-", 
    RowBox[{"9.105375434750162`*^-7", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"3.6743713227243024`*^-6", "+", 
    RowBox[{"7.073284346322969`*^-7", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "2.7990058083347696`*^-6"}], "+", 
    RowBox[{"0.0000112564827639346`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.000014918577548849352`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.0000316278486761932`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.0010751767283285608`"}], "-", 
    RowBox[{"0.00047282220513073084`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.003816465653840016`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.017839810396560574`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.12124105653274578`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.12327042473830248`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.9774980792734348`"}], "-", 
    RowBox[{"0.1877130220537587`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"1.3432866123333178`", "\[VeryThinSpace]", "+", 
    RowBox[{"3.2034715228495942`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"4.072408546157305`", "\[VeryThinSpace]", "-", 
    RowBox[{"6.123755543580666`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "9.442699917778205`"}], "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"4.072408620272648`", "\[VeryThinSpace]", "+", 
    RowBox[{"6.123755841848161`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"1.3432860877712938`", "\[VeryThinSpace]", "-", 
    RowBox[{"3.2034712658530275`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.9774985292598916`"}], "+", 
    RowBox[{"0.18771238018072134`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.1212417070363373`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.12326987628935386`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.0038169724770333343`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.017839242222443888`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.0010756025812659208`"}], "+", 
    RowBox[{"0.0004731874917343858`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.000014713754789095218`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.000031358475831136815`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "2.659323898804944`*^-6"}], "-", 
    RowBox[{"0.000011341571201752273`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"3.6970377676364553`*^-6", "-", 
    RowBox[{"6.517457477594937`*^-7", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"3.883933649142257`*^-9", "+", 
    RowBox[{"9.128496023863376`*^-7", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.0816457995911385`*^-7"}], "-", 
    RowBox[{"2.954309729192276`*^-8", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.647450895420545*^9, 3.647451017767776*^9, 
  3.6474512744911413`*^9, 3.6474515055583897`*^9, 3.647451874373087*^9, 
  3.647451959318076*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rationalFuncExpr", " ", "=", " ", 
   RowBox[{"Re", "[", " ", 
    RowBox[{"Total", "[", 
     RowBox[{"a", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"I", " ", "x"}], " ", "+", " ", "gamma"}], ")"}]}], "]"}], 
    " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"plotRationalApproxGaussianSubOpt", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"rationalFuncExpr", "-", "gaussian"}], "//", "Abs"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "204"}], ",", "204"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.580064579474124*^9, 3.580064598834687*^9}, {
   3.580064643225775*^9, 3.5800646436390257`*^9}, {3.580064755391025*^9, 
   3.580064757140273*^9}, 3.5800648122752*^9, {3.580067468200594*^9, 
   3.580067475570487*^9}, {3.580068093586528*^9, 3.580068102850223*^9}, {
   3.580068329852153*^9, 3.580068352194763*^9}, {3.580068675704802*^9, 
   3.5800686815528507`*^9}, {3.5801648954816837`*^9, 3.580164900257288*^9}, {
   3.5801653842788563`*^9, 3.58016539845504*^9}, {3.5801662448345947`*^9, 
   3.5801662461438847`*^9}, {3.580166293977455*^9, 3.58016629530308*^9}, {
   3.580166541578795*^9, 3.580166544624608*^9}, {3.5802277739023743`*^9, 
   3.580227779044838*^9}, {3.5802363814794493`*^9, 3.5802363820389233`*^9}, {
   3.580236567793229*^9, 3.5802365693928757`*^9}, {3.580239115388936*^9, 
   3.5802391217963247`*^9}, {3.5802393004633102`*^9, 3.580239301359301*^9}, {
   3.5803122238280888`*^9, 3.580312230657344*^9}, {3.580315071372238*^9, 
   3.580315074116662*^9}, {3.580482660255753*^9, 3.58048266463301*^9}, 
   3.580767121328783*^9, 3.580825422065242*^9, {3.582911059046588*^9, 
   3.58291105937294*^9}, {3.647451279504554*^9, 3.647451280567142*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.5800680575667963`*^9, 3.580068103308209*^9}, {
   3.5800683087913513`*^9, 3.580068352627019*^9}, {3.580068676276972*^9, 
   3.580068682027766*^9}, 3.5800969847546*^9, 3.5801648250807037`*^9, {
   3.580164896124118*^9, 3.5801649005141287`*^9}, {3.580165380885705*^9, 
   3.580165398899849*^9}, 3.5801661308886137`*^9, {3.5801662352271748`*^9, 
   3.5801662466384172`*^9}, {3.580166289702691*^9, 3.580166295646893*^9}, 
   3.5801664093322363`*^9, 3.5801664856169033`*^9, {3.580166537339625*^9, 
   3.580166545101865*^9}, {3.580227774899996*^9, 3.5802277795584507`*^9}, 
   3.580227967349235*^9, 3.580228004803303*^9, 3.5802281861523027`*^9, 
   3.580228235685915*^9, 3.58022827881824*^9, 3.580228467334786*^9, 
   3.58022852891433*^9, 3.580228563034774*^9, 3.580228708486483*^9, 
   3.5802362664274282`*^9, {3.5802363783587103`*^9, 3.5802363828856916`*^9}, 
   3.5802365819257717`*^9, 3.580236694589787*^9, 3.580236764119804*^9, 
   3.5802369202436037`*^9, 3.580237062990086*^9, 3.580237499886095*^9, 
   3.5802376264507923`*^9, 3.5802377564108477`*^9, 3.580237910027562*^9, 
   3.580238208744285*^9, 3.580238296589672*^9, 3.580238636391024*^9, 
   3.5802387331667337`*^9, 3.58023899530838*^9, {3.5802391132443*^9, 
   3.5802391220423803`*^9}, {3.580239297726254*^9, 3.5802393016909733`*^9}, {
   3.5802393730954514`*^9, 3.58023938102695*^9}, 3.5802396204054956`*^9, 
   3.5803119428538733`*^9, {3.5803122196371403`*^9, 3.580312230965095*^9}, {
   3.580315068990905*^9, 3.580315074445722*^9}, 3.580340229265644*^9, 
   3.580340696588622*^9, 3.5803407775475492`*^9, 3.580340829849118*^9, 
   3.5803410965312567`*^9, 3.580341161336282*^9, 3.580386229780891*^9, 
   3.5803862970397387`*^9, 3.5803863609553623`*^9, 3.580386408014195*^9, {
   3.580482650931511*^9, 3.580482667740821*^9}, 3.5805003048054953`*^9, 
   3.5805080979304743`*^9, 3.580765901290909*^9, 3.580765974914044*^9, 
   3.580766070924671*^9, 3.580766146093462*^9, 3.580766203287333*^9, 
   3.580766266424623*^9, 3.580766359165917*^9, 3.580766403270836*^9, 
   3.580767121713107*^9, 3.580767156153604*^9, 3.5807672021127043`*^9, 
   3.580767258348933*^9, 3.580767310030016*^9, 3.58076737331575*^9, 
   3.5807677413760633`*^9, 3.580767798704439*^9, 3.580767845176209*^9, 
   3.581857842386819*^9, 3.581877655967634*^9, 3.582645469245419*^9, 
   3.5828294403430157`*^9, 3.5829099702226267`*^9, 3.5829110602397957`*^9, 
   3.5842790821279907`*^9, 3.5855088092415543`*^9, 3.647447873661437*^9, {
   3.6474508793338137`*^9, 3.6474508853598337`*^9}, 3.6474510192581587`*^9, {
   3.647451275755834*^9, 3.6474512809803963`*^9}, 3.6474515056242867`*^9, 
   3.647451874440371*^9, 3.6474519594114933`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Constructing rational approximations of cos(x) and sin(x)", "Section",
 CellChangeTimes->{{3.647447921696684*^9, 3.647447931423731*^9}, {
  3.647448035551383*^9, 3.64744804176587*^9}}],

Cell[CellGroupData[{

Cell["Getting the Gaussian approximation of cos(x) and sin(x)", "Subsection",
 CellChangeTimes->{{3.6474480211028557`*^9, 3.647448032801536*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gaussianFT", " ", "=", " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"2", " ", "Pi", " ", "I", " ", "x", "  ", "k"}], "]"}], 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"x", "^", "2"}]}], "/", 
         RowBox[{"(", 
          RowBox[{"d", " ", 
           RowBox[{"h", "^", "2"}]}], ")"}]}], "]"}], "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"d", " ", "Pi"}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{
       RowBox[{"d", ">", "0"}], "&&", 
       RowBox[{"h", ">", "0"}]}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"normalization", "[", 
   RowBox[{"h0_", ",", "d0_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"gaussianFT", "/.", 
      RowBox[{"k", "\[Rule]", "1"}]}], "/.", 
     RowBox[{"d", "\[Rule]", "d0"}]}], "/.", 
    RowBox[{"h", "\[Rule]", "h0"}]}], "//", "N"}]}]}], "Input",
 CellChangeTimes->{{3.64744903478992*^9, 3.647449062329731*^9}, {
  3.647449182097762*^9, 3.647449193615082*^9}, {3.6474517580081873`*^9, 
  3.6474517586729193`*^9}, {3.6474518223190517`*^9, 3.6474518245161533`*^9}, {
  3.647451885062175*^9, 3.647451931780237*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"funcExp", "[", 
   RowBox[{"x_", ",", "d_", ",", "N1_", ",", "h_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"d", " ", "Pi"}], "]"}]}], 
   RowBox[{"h", "/", 
    RowBox[{"normalization", "[", 
     RowBox[{"h", ",", "d"}], "]"}]}], 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "Pi", " ", "h", " ", "n", " ", "I"}], "]"}], 
      " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x", "+", 
            RowBox[{"n", " ", "h"}]}], ")"}], "^", "2"}]}], "/", 
        RowBox[{"(", 
         RowBox[{"d", " ", 
          RowBox[{"h", "^", "2"}]}], ")"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"-", "N1"}], ",", "N1"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.647449261430581*^9, 3.64744926802883*^9}, {
  3.6474494603616743`*^9, 3.6474494612166853`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"funcCos", "[", 
   RowBox[{"x_", ",", "d_", ",", "N1_", ",", "h_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"d", " ", "Pi"}], "]"}]}], 
   RowBox[{"h", "/", 
    RowBox[{"normalization", "[", 
     RowBox[{"h", ",", "d"}], "]"}]}], 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "Pi", " ", "h", " ", "n"}], "]"}], " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x", "+", 
            RowBox[{"n", " ", "h"}]}], ")"}], "^", "2"}]}], "/", 
        RowBox[{"(", 
         RowBox[{"d", " ", 
          RowBox[{"h", "^", "2"}]}], ")"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"-", "N1"}], ",", "N1"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.580331584128703*^9, 3.5803315904792137`*^9}, {
  3.580331738444368*^9, 3.580331739227398*^9}, {3.647449075683709*^9, 
  3.647449077153386*^9}, {3.647449176624298*^9, 3.647449202926734*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"funcSin", "[", 
   RowBox[{"x_", ",", "d_", ",", "N1_", ",", "h_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"d", " ", "Pi"}], "]"}]}], " ", 
   RowBox[{"h", "/", 
    RowBox[{"normalization", "[", 
     RowBox[{"h", ",", "d"}], "]"}]}], 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "Pi", " ", "h", " ", "n"}], "]"}], " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x", "+", 
            RowBox[{"n", " ", "h"}]}], ")"}], "^", "2"}]}], "/", 
        RowBox[{"(", 
         RowBox[{"d", " ", 
          RowBox[{"h", "^", "2"}]}], ")"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"-", "N1"}], ",", "N1"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.580331757732791*^9, 3.5803317611627903`*^9}, {
   3.580332212753644*^9, 3.580332236942094*^9}, {3.647449083131329*^9, 
   3.6474490833962193`*^9}, {3.6474491738483067`*^9, 3.647449174375208*^9}, 
   3.647449209210238*^9, 3.647449528561839*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"h0", " ", "=", " ", 
   RowBox[{"1", "/", "5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", " ", "=", " ", "80"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d0", " ", "=", " ", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"plotExpErrorGaussian", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"2", " ", "Pi", " ", "x", " ", "I"}], "]"}], "-", 
      RowBox[{"funcExp", "[", 
       RowBox[{"x", ",", "d0", ",", "M", ",", "h0"}], "]"}]}], "//", "Abs"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "14"}], ",", "14"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6474494262623243`*^9, 3.6474494872250977`*^9}, {
  3.64745007811065*^9, 3.647450099244638*^9}, {3.6474512958084297`*^9, 
  3.647451300246251*^9}, {3.647451347657696*^9, 3.6474513478396482`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
NEmKAN4X/wHshPmy
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 5.1593000000000006`*^-11},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.647449435449285*^9, 3.6474494879476624`*^9}, 
   3.647450068226943*^9, 3.6474500998864317`*^9, 3.647451024960244*^9, 
   3.647451138974955*^9, {3.6474512877923603`*^9, 3.6474513484867496`*^9}, 
   3.647451506003717*^9, 3.647451601380011*^9, 3.6474518746447077`*^9, 
   3.6474519616394157`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotExpErrorGaussian", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "Pi", " ", "x"}], "]"}], "-", 
      RowBox[{"funcCos", "[", 
       RowBox[{"x", ",", "d0", ",", "M", ",", "h0"}], "]"}]}], "//", "Abs"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "14"}], ",", "14"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.64744949422138*^9, 3.6474494972095222`*^9}, 
   3.6474501072229967`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
/PuL4uOly0MGPmH8r6hwtOdwqXMaWjmmCjI14o2NDqOH1uTDoPurliVyaIpC
JOjkS56YevER48lMhiu/dv9qD0a77CoGus7NgMpt6HyTOpjjQ50XN9aJ+etE
B+uaieQLRejUNSy4T9qkZeOOprzkQKehV53WMrQS/32+R/xIolL1B4GHN/Gg
I/pV1etV6PF+DrgvMHsb9bBDYK29LPiXQh01n4fuiqVDqPomuVnX3ws8SqkD
+adPN9CH23H+jcWQvkHN9qoz4YYU0K5OOKfX9g7nkx8G1O3Sd0Z2oR1Nn4IV
O+RpftVb3P/5VdC5h/T81Cq0yUMqnGm9OKD28A3uX1MDjDt8m/1JEi36nQ2h
n49rJAa04X41ckHe7e1O++HXxH7zIGPI0lnaGU2J5YLOJWbg89et+H0hs4E+
AY9DdqHF1jeAdWBxvVHVK4G12+qhc/bKzilNtMOuiv/RdOfxVD1tAMBvlpIU
SUISUgkVQsKDSqWiJOQXSaVSlrRJpbqWLJEUCSE72fd9ua7r7klCkpBUiqJS
Sar3dp/z/vn9zJyZ55mZc2amBfC8nfKnJqkD32enXPi9SGaJtwTadMwbwpMi
DLX8n/Id0pIBcsuF949+bcd8iiogO/eyT9ZRtEo5BfS0v8QcfvaEb5NtLaC8
zGt0eCe6nsGEeVKfNp6itPE9dyUHpoTc733T4VvRYTsXHo08ff7D+vE/mx5X
4kLmo8eBQkat/PdzfjEbrhZy1s5f/oj//OrZvO/PbUbPknlcvlPMabDmbPN1
tR9svqv0GmGmbaPm+gEWrrdTZdCvV/tiM4uJ+Z5L4d23K4OsShj4voiGQeRU
idaB+3TcT3IKwLW3oPdEYAvmG1MDpg05wd4eNFzPVlSQSc7UDrBr5nv0Gh0+
+6W+vGVC5bsjmwXsI0khCapNuF4zOZC6JX7dw/kUfL948zmxS6Pe7Vs9Pv+Y
d7+QVFlwnVGL38MpFth2LT6RFFeN8/2NDjPjFzRWulXi/L6hQsWBOQufQDnO
z1gtHFcSdPsgXor7Y2sRyLyZoggOFuF8ZkVB5J43qw1c87G9JwnwpbvjubvY
Q4znTwnsdaZdf1CUjt+nkXooe1eq1W6TzLdqfTOo922tnf3lHo5fEgNePN+5
ou9cBPbnxgbKpwV5e+Zc4ruO9711z+sf1so8ZMJ/n3n7f8yji+ym7ut80w5w
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.647449505484641*^9, 3.647450115471998*^9, 3.6474511480831833`*^9, {
   3.647451333936154*^9, 3.64745135877483*^9}, 3.6474515062760077`*^9, 
   3.64745187484265*^9, 3.647451969583104*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotExpErrorGaussian", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "Pi", " ", "x"}], "]"}], "-", 
      RowBox[{"funcSin", "[", 
       RowBox[{"x", ",", "d0", ",", "M", ",", "h0"}], "]"}]}], "//", "Abs"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "14"}], ",", "14"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.64744950589509*^9, 3.647449510585244*^9}, 
   3.6474501190153027`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.647449516737185*^9, 3.6474495392781553`*^9}, 
   3.64745012604386*^9, 3.6474511547723837`*^9, {3.64745134062049*^9, 
   3.64745136543927*^9}, 3.64745150663188*^9, 3.647451874976931*^9, 
   3.647451976827096*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Constructing final rational approximation", "Subsection",
 CellChangeTimes->{{3.647448049822872*^9, 3.647448055221191*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"computeResidues", "[", 
   RowBox[{
   "p_", ",", "func_", ",", "M_", ",", "L_", ",", "h_", ",", "aGauss_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"L1", ",", "L2", ",", "c", ",", "ind", ",", "res"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"L1", " ", "=", " ", 
      RowBox[{"Max", "[", 
       RowBox[{
        RowBox[{"-", "L"}], ",", 
        RowBox[{"p", "-", "M"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"L2", " ", "=", " ", 
      RowBox[{"Min", "[", 
       RowBox[{"L", ",", 
        RowBox[{"p", "+", "M"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ind", " ", "=", " ", 
      RowBox[{"Range", "[", 
       RowBox[{"L1", ",", "L2"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"func", "[", 
          RowBox[{"h", " ", "#"}], "]"}], "&"}], ",", " ", 
        RowBox[{"p", " ", "-", " ", "ind"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"res", " ", "=", " ", 
      RowBox[{"Total", "[", 
       RowBox[{"h", " ", 
        RowBox[{"aGauss", "[", 
         RowBox[{"[", 
          RowBox[{"L", "+", "ind", "+", "1"}], "]"}], "]"}], " ", "*", " ", 
        "c"}], "]"}]}], ";", "\[IndentingNewLine]", "res"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.580828071900773*^9, 3.5808281366639643`*^9}, {
   3.5808282364894447`*^9, 3.58082827955197*^9}, {3.580828310817884*^9, 
   3.5808284374880953`*^9}, 3.5808285468382263`*^9, {3.580828914914596*^9, 
   3.580828915096168*^9}, {3.580829127789275*^9, 3.580829128149096*^9}, 
   3.580829200446706*^9, {3.580830581533143*^9, 3.5808305818506813`*^9}}],

Cell["Construction for sin(2 pi x)", "Text",
 CellChangeTimes->{{3.647448186531571*^9, 3.6474482068339357`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"d0", " ", "=", " ", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h0", " ", "=", " ", 
   RowBox[{"1", "/", "5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", " ", "=", " ", "11"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", " ", "=", " ", "160"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"norm", " ", "=", 
   RowBox[{"h0", "/", 
    RowBox[{"normalization", "[", 
     RowBox[{"h0", ",", "d0"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"residuesSin", " ", "=", " ", 
   RowBox[{"norm", "  ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"computeResidues", "[", 
       RowBox[{"p", ",", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "Pi", " ", "#"}], "]"}], "&"}], ",", "M", 
        ",", "L", ",", "h0", ",", "a"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", 
        RowBox[{
         RowBox[{"-", "M"}], "-", "L"}], ",", 
        RowBox[{"M", "+", "L"}]}], "}"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.580831372976596*^9, 3.580831376614959*^9}, {
   3.580909840303685*^9, 3.58090985982876*^9}, {3.581859526113285*^9, 
   3.581859545214396*^9}, {3.5828297027218637`*^9, 3.582829704494635*^9}, 
   3.6474496020080137`*^9, {3.6474496841520557`*^9, 3.647449721773219*^9}, {
   3.647449756887315*^9, 3.6474497746515083`*^9}, {3.647449928442309*^9, 
   3.647449930914919*^9}, {3.647450592725622*^9, 3.647450641650564*^9}, {
   3.647450712334487*^9, 3.6474507162358103`*^9}, 3.64745141757279*^9}],

Cell[CellGroupData[{

Cell[BoxData["norm"], "Input",
 CellChangeTimes->{{3.64745139192502*^9, 3.647451392364512*^9}}],

Cell[BoxData["4.850766356781087`"], "Output",
 CellChangeTimes->{3.647451392684825*^9, 3.6474514428915787`*^9, 
  3.647451506740871*^9, 3.6474518751048613`*^9, 3.647451977223948*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tau", " ", "=", " ", 
   RowBox[{"-", "alphaReMin"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"polesCos", " ", "=", " ", 
   RowBox[{"h0", " ", 
    RowBox[{"(", 
     RowBox[{"tau", " ", "+", " ", 
      RowBox[{"I", " ", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "M"}], "-", "L"}], ",", 
         RowBox[{"M", "+", "L"}]}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rationalFuncSin", " ", "=", " ", 
   RowBox[{
    RowBox[{"residuesSin", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"I", " ", "x"}], " ", "+", "polesCos"}], ")"}]}], "//", 
    "Total"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.580831459325493*^9, 3.580831476490184*^9}, {
  3.580831518460182*^9, 3.5808315194907007`*^9}, {3.580831552323456*^9, 
  3.580831552984909*^9}, {3.581859559671568*^9, 3.581859560573861*^9}, {
  3.647449584387423*^9, 3.647449594775078*^9}, {3.6474496444808292`*^9, 
  3.647449657262252*^9}, {3.647449702892956*^9, 3.647449733777042*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotRationalApproxSin", "=", 
  RowBox[{"Plot", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "Pi", " ", "x"}], "]"}], "-", " ", 
      RowBox[{"Re", "[", "rationalFuncSin", "]"}]}], "//", "Abs"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "28"}], ",", "28"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.581859478064567*^9, 3.5818594816784983`*^9}, {
  3.5818595695754642`*^9, 3.581859593844192*^9}, {3.5818597700358887`*^9, 
  3.581859772808807*^9}, {3.6474499548716307`*^9, 3.647449958837565*^9}, {
  3.6474500219791927`*^9, 3.647450044421598*^9}, {3.647450245618308*^9, 
  3.647450273871772*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
OUtq4kc3zr//XYU26y8tRj9oTYV3efb6y6fXLZjpnwLd2ZcuZ/1Cdx8jQ89L
lwjDr2j1+fPBh7RrZd8+oJ3nz5O9yTd77neg6Y/m75OJXpzKTeioNDp8fn5b
oZmGtkophr6Yu4ZO5Wifey7w5WngFf48tPnjfOiPvP8kOxVt96UGBh89rDSK
Qys0UuBr2OOP3yOI8X0rYej+U+7QYDT5dSqMBMVu2uKLjjdNhm/3Eoxb3NDn
11Pgu1/ytcuX0ZrvWXBzlcN/ebbojYJs4CpW3v77NJH/cfb8feG36Pb/0FzX
GkFyoGTsugFabf4+lHTLs71Uh8hHvwCUJfYWTmkR81sbAGW5iyN2qaLZwcWg
e4jl6q2IHhSa3x8fHxwjy6KNh+hw0v3YNg4JdEYADfqEJUR0BdBx5Eq4/LL7
111uYr4/02FKJ6Gtbmbtgi9vfAx+3Tb5S8fREwXFIHBtY/jhEfQKHipEL//h
cv8z4fMMWJ9ScLSlC+2UTofc3W5bhdrQPj41oPVml9CxejRpbxYwLi/6GUFG
y7ZGgzFPLbujBK03WAld8UG5Ejnokfn7hc2OI2EnU9COps0w2iriHBOLjhJi
g4dD55GeCLSoeBNwc8ZukQ1BF5Yz4OGzswLWd9DMn8UgrSb/44U7kY+iNaQ2
DjV/cUHznCwAVZuc7A326Mp7ZKiccX1gb4VWWkqDg5GaTi+PoxvfkqFNecbw
mxExX5EisKijbN5yAE1WuwcDZ/yXuwB6ckseXJnU/5avRuSfQoGZMIGmsU1o
g6VMCFBsz1RfR9TjCQtEqFEhblLo3LdMiDt52rFcCD0uRgPF32sMpnmIfBwK
oTC4f9NuElGPhguwW+4lr8+fNQt+M1ME9ZWXhynf0YcW0cH0P7UGzn504p96
6Pk2mbH/Pfr79waw968KuteOJj+thzEZX4f6BnTaWRrcKjmgz0tDM9mFsMyY
d6NhOZpUaQMRgy1LQ/PQPqw8WH074is7Dc3+XA0ZkifqhePRYd8poJa/Kt30
CdrNtQZq9D8FRD5ARx3MB/3PKXadd4n48VfhtcdFPSkv4nlICViJqihYXEX7
SdbCUObYkriL6LHnTXBtf9nAB2tifFc2kHq86tacRGsfa4Gg6/tSzx1F92rW
g5jAknvJeujcWzUQn9pgO7AHbfU0EZZdshq+qI5WYb8EV9Xxy6NK6EFmDXT/
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
qkKXbKqiW78QQn7+nfg5DXRAiBj46s1qY3vREj0x/FPIqu3SRauUC+DIHr5j
kwFaZMWCb0uGxm8YoxW8gqFGe+J8pgm6yv4RPCudVY81Qx+7wgOK3lI91RLt
uqMHvCo2nV0/RXPtfoGrhsrPze3RYeO1wKmiJOk7o4ummmHV2FBT2Q3N3uCD
Wd1H91Y8yf6nBiDSxNpF6oN2SB2BinvOU/3+JP61QXhy+BjtERWdsiwA9daT
e6pPoZdqHoCrRURzwWn0NKUc0h7EuaV8g/Yw4sBDq9TfImLQXy0IQMa6dvF4
Aom3TP5/YPvDXvtk9Je7eiCks+Kng5fQN+pZQIfGzykZ2w4zH8+GwW7mzL/Z
+DwjiAFKn3VfWshD6/hzwVEg1n5aiG7j90Cyu+Q+twR9c4MHraIZz5ZbJB86
8vfX6/XL0kpSD0oQGA6tp1+tIfNXsyHwuKLuuQYSn6gPCn/VfBDUQupzcwR6
/fWPuTPQXbJRePv04CtLFrr2b/l9mnokw6CT5HtCAHHPQE+VS/IXzID6EM+H
qwK00d0KkEoDfKb7Sb9sdIBOeNj8wDA6MYgHPi/PZrWPkXpXdENuFO29u+No
6iQDuHNZrMIpsv+LObAeXeib+oLk+/0OsJCV/R41h46ZFMKZuLrsEzKSD90B
qFpqM4Rl0m8aAzB+nsM+tIau7BDC7r/6/LQ20Ue92OBBG5NtbW07Mc43GP4D
o23zyA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.580831506987112*^9, 3.580831522428911*^9}, 
   3.580831556162373*^9, 3.580831622687828*^9, {3.580909833569821*^9, 
   3.580909861594221*^9}, 3.5818594821973267`*^9, {3.581859563322319*^9, 
   3.581859594393104*^9}, 3.581859773431875*^9, 3.582829555451948*^9, 
   3.5828297091897383`*^9, 3.5830004593483067`*^9, 3.647448129143632*^9, 
   3.64744817974599*^9, 3.647449557890861*^9, {3.647449597888349*^9, 
   3.6474496052246523`*^9}, {3.647449711256686*^9, 3.6474497395360937`*^9}, {
   3.647449773265489*^9, 3.6474497782151203`*^9}, {3.647449939392724*^9, 
   3.6474499608413773`*^9}, {3.647450023884882*^9, 3.647450046335601*^9}, {
   3.647450248694594*^9, 3.647450275842207*^9}, 3.647450738397777*^9, 
   3.647451155566948*^9, {3.647451370812334*^9, 3.6474513978789587`*^9}, 
   3.6474514461496897`*^9, 3.647451506989626*^9, 3.647451875352306*^9, 
   3.6474519790508423`*^9}]
}, Open  ]],

Cell["Construction for cos(2 pi x)", "Text",
 CellChangeTimes->{{3.647448212340876*^9, 3.647448214881939*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"norm", " ", "=", " ", 
   RowBox[{"h0", "/", 
    RowBox[{"normalization", "[", 
     RowBox[{"h0", ",", "d0"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"residuesCos", " ", "=", " ", 
   RowBox[{"norm", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"computeResidues", "[", 
       RowBox[{"p", ",", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "Pi", " ", "#"}], "]"}], "&"}], ",", "M", ",", 
        "L", ",", "h0", ",", "a"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", 
        RowBox[{
         RowBox[{"-", "M"}], "-", "L"}], ",", 
        RowBox[{"M", "+", "L"}]}], "}"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.647448266223233*^9, 3.64744827124996*^9}, {
  3.6474514506188602`*^9, 3.6474514662097282`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rationalFuncCos", " ", "=", " ", 
   RowBox[{
    RowBox[{"residuesCos", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"I", " ", "x"}], " ", "+", "polesCos"}], ")"}]}], "//", 
    "Total"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6474482866230173`*^9, 3.647448310593943*^9}, {
  3.647448348402828*^9, 3.6474483487371273`*^9}, {3.6474506696047993`*^9, 
  3.6474506876557198`*^9}, {3.647450746921528*^9, 3.647450747103047*^9}, {
  3.647451470451823*^9, 3.6474514740812063`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotRationalApproxSin", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "Pi", " ", "x"}], "]"}], "-", " ", 
      RowBox[{"Re", "[", "rationalFuncCos", "]"}]}], "//", "Abs"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "28"}], ",", "28"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.647448314222414*^9, 3.6474483187773523`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJw023lYjd3XB/BDSUglpaInIQkhJElfopBUkiSEDCWEzIlyJGlCUiRK0aR5
noczNY8SMiWkkhBCUnn7nXW/f/G51r733mutfZ+zz+UyZfcRC7vhLBZrhQSL
9b8/jU4/7vr3byln6K+snJ8cjHadujnkL1l8YiGq3I9ytX6TU2Ylw8+LM7vu
O5mjfg1mV6Vu7v9CNjqQC6nAHSzRTrK1TSnqbyceCPtArh9Vg4B7/Y06b8nq
bnXYGLVu+eNX5ILVNZCND3l4qInc0lSKpykfx4s3knti8nArS8ftfh0zn/wN
WBdc7tCrIrN3pmAi76nFs1KySzoHL8umFx7lkYueleBuzYkZEkXk1o5S7HjM
vx6dS25v5kPluUy/fiZZc2i9t8277F+mMO6LwP3WlPqTCeSm5gfY2/lPVzqW
XB6cB7Vus6i4B+SuWh7af4ZKrbpHPmEqQOzfrjNvQsh713BxYJhe65mbTH2n
ZkBjpK+ZbACZpbcBnyVe5CRdYfIdk40kmZnT1noz9ekpgZOC85X3HuQOpxrM
Vy777comN+vX4/u0CbsVzpEV/GuRMdOuOu00k//fMpycl6FtepyZT6UA2otE
ItoPk8MFQejVtRjjfoCJJyQjVz/ipJI9E39UDJfV3W+ydjH9+cyHnsly4w3b
ySYH+BjYcDXjkzVznvYWomjza2VPSyafA/Fgb9fwVjFn5j8eiJV7zv7IW0f2
cMiGyP7K7ZvWkN985kFwWLH860qy5NtSeJ5wWOCzTGhOQ20pjFyy76rqUnxd
IA+j2GIjixeR3fwyUXlp09Et88n6ncfg5xv58ocGOYOTAbPrP1ZdVScrDfVL
6tbKFHVVsv+FKtTfvT6RP5nsF1eLgPstHtsnMfEFNdgYO+/r7wlMfhZlkE1y
2xIgQ3YyLMDT9Bq+hiRTvzF3cCtXaW7ZKGa8dTysiw8G7xrBnIfvBZhYkje8
n8W8HyweXlaOOnSzX1fo7gwO7tZbP9PsJffmZWLH05gVVT/I+g0+mPzqV7zd
VzJrZBpa3q6awPpEPifFx/32QHZIG+NLlXgsYoKnb8kSY2ohqiLSN+412fG/
amjp5WWZNpFPzCuBnfXR496PyQ67M3HzhLpmSS2Z034Rpf5vuliV5P7YHPxO
uPlQr4Rc6SqAeoWpvTNHaKf7VuWw/iA6LSNfaLbI2jJ4Dyt48zWLxs+O5yLv
v+N3Z6eRpa+nonPJrC37Esnh3pcxyeqt3INYcn1yJkyOBTc0P2Dyn87Fuavr
r028R1Yv4yExTszEKoSZb1kRmksLxQOCmP3z4yD5/kRJjT8z/8UHWP5vtvso
PyZfJS6cJr1ftuoy2cOkCuGLQ/6y3cmiAfV4tHFDToErOSCyHsOdxE/2OpN1
0quwwK94vtYJssZQfntiT305coRZ/0kUAgVz4uMPkG1fx0LQ0rqv3Y7pf34h
fvbfUZ22i6xUx4Oa4sa3O2zImke5sFo0OixkM9krPguXN3C3PrVgno/1R84h
Z3kZM+a87E3BR+95jaZryXeWcDExus3f25D6USJdBmNeqGnJcnLZvnKcbbYc
PWwpufGpAAl9Y8r0tOn5jPJcvJrAv+g8n6wSeA1jF7roZ2iQA5vSsWz9/IGv
M5h+DZ2HIwc7cmdPY+obNFTPy/dO7VMmt+TVoP6B1cIHiuSmg5UYxhnb3SxL
TrDkYcErQcJEaaZewxOxu/fsfqsxZP8ZEbghu1AtQIxspJsPgWbnu5phZJvL
PPw0ibg3amAJnYdXXKjtt7ZZ1Uvuvp4Nq0tSihd+kFltvrgcUfqk4Aszvjwd
OYWuAb0fyeEOAnQ811qv9YGscrAKir8+jXFqIcfa1cBY5kF5/Ety4+cKuMzd
eqn9KVm8nIt443ErpzWQrUPi8Mq+fHBHDbm+PRISF8/nh5STJVYUA/e0nZ/y
hWaPDy/F4fzPWjLFZO7wCoQ9i/xmmkfjBzxKUfdjW5J3JlnduxiC7ceNJqSS
FULikVfm8+5+Atk/JwjJ8++fmxfLrH88C5F3cicUPCAHt3MQMuJRitE98t2z
PFw70mH8JISs+bYIHs//te66yYxfkgIXA/nzX64z9RkWAKfEuYpnr5CN2Pmw
k1+dPtKb3DK7HFsvbDcN9CBrnaqD+acT7SpsxrKPsHqT34XEs8zzGXVYWvxg
ku5pZv3b5dCcmZ9ZeoyJexZA7UbD+o2Hyfp5QVAa+PjxzX6mn0bJGLdvmIej
HVnnSRHEHiko/7El25bw0K+rmXPJhmzD5uJ75BoLGWvmfEzLQbvkzq6wjWR2
RiheOZ/ynL2eqfe5GDS8u6KSY0zuvV2IcpOoPMPV5Gd7S1CYVWD5aAXZaU85
0lQav2wHefeMMsT6fPLq1CEfGDovYT3Dp53WYs7L6DTc2DGxUEST2Y+IH7zK
52/2n00uuJwLtwVrvynNIDdNLcWJu7a+D6cy+1tQjf1iztO1lcn9z2qww+la
MU+R3JpbCcsX0VvWy5EN9/FhbFj046U0k09gGpYnPbniIMHkX+UNLYXPM36O
JJurZ2GWuyjvgghZVoMLla5JNpL/dGi9ezzIWS38FdJHZq8pwmiOsf+MX+Tu
ykSwZu2elfGNib+7iZ83zgj0P5OdLfPROeC/o6aDXF9dipZ9sb1bWsmNx6vx
5FFxQNsb8omrNahc+kzj+Euyx5cKcKK+lP57yjxvzEOmlNguvway7d9kxJ35
769CLdl87m2Ev9cKiqogr/bMQ5CpybwFJeTd2QL4ZO+pKOIIHb7GrhzsKWf3
rCsQmv2jogynfAMGnmXT+IdT+Tj48+Gtvenk8pQs2O7kzv+WRGZJX4VVRVOV
axyzn5JEmCzsthsdzewnqBArQkeybkUw9QrlQXvk5JBpoWSnQS40jmprpQST
OwJycWKCmPrGQGZ+VjgK859M+nWNrJ8YD7FdUVK3fZn+/OPCTOykiN5lcs+s
KtyMN/zd7M6M31SPZnPZTxfcyD5Z9VD79b5Z1YWp77oaHLmT3lB2kunHuBLk
6F8sPXCUef5BBlhtFnljDzH9HeMGI9+pSSkOZB3jTPhrfo/YuJfsNZmLpifc
oF87ydJb+Jhy9rr37W3MeVAbum+r7HLV20zmrMpCWonm0TcW5JbaQPQdYNm5
m5F7l8fDQLreeroxWTmhCH6Z90zKV5GDD5egcesR/YMrhOZkDt2nlVjLtSRB
/dx6rBR7oyTVU3Vo/LTPHCQYN0+y1CKrn0jBz6+JUr/nkf3fB2BZkKtIyGym
HuZ58NQ1/a03g+nPnlLUvlH69GYqUw92NSZc6mp2VybL2tZix6yChukTya8S
qhBT51taLsfs94kA3Se25R0cx9RnXRZ0Js5OkhzL9LvtINjFfRGp4sx+7NNQ
sbcyyFKU3FRQDJnRId6//y2m+uvxsDV5v2vIX7J4fDHuWy45it/k+tVp6Pwj
btfyncya64QF95qsL34hx+7MwlnDWBO1TrJKowCCj6f1Kz4w8wVXQeLaGi3H
t2TbJbWw1JJXl3pNVl9VjbvP2yalNZHPKZSi1S1LalMjWRCTizmqniK9deTw
Gf44VbHpd0gVea9cKooOT/+EMma/i7gQk/3Z3MIju0eXYn2uoOFikdCcJpVy
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
pS2f5UK+yC/FiE8KM02Pkl8/52HiuXU3bzuQ64fuE/PGuom07SRLhwbBMCzF
acFmJt99cbCe9/61mxnZ4UMBDnHk1lWtIjuvGfq+3GCUIw+yxigBbr5zmb5X
i6nfNg7ijycGpMwm+zumgiPa8q9/KtOPHT54EiRzaO1EcnhpLjrVVr0IGkfu
/laKwezTa96JM/X6WIPxa+My5rKY9XTrof7i1ZSzvzWEjhyqv95BqWtlX8iW
emXY0L+if3wbmeWSB/srJ/bbvibrn72Gs8oxTxMayTmiqfBPfm7wp4rcaMVB
pL5E6io+uWmpALmPlikH5JG704fel2srNKekksUHCxBuargyJYYcaxCDG2PW
WC4PI0ubRcCzYq19bSCZfTIfLpdNnLf7kpv3CHBo1XqfrgtCt9Q1l8JWxOLu
WWeKzxy6H1lyLZNGHyFHu+RjzfnNnNt2ZE2Lu9AdupGr25ATHFIw969Na7YF
ucWEjym5O3+tXks2D6iC7Ond4k+XkwVWdRBfZDfRTptxRQ3+ft+n0aNBttUq
w5eUA8suTiP7D+Ti3eFD5jITmfrGeeKJhtPuCGmyek0qyjuPndAcSebMKkZB
7EnP4oHZtJ/xXCTbOweb9ZBZE/JwX/Vs3OtOsn9SxNB5ci1wfEtmK8bDO5xd
+/cZ2eMPF+d2XGzxqSU7xVbCScnzu2IJ2eFzLfa88BJ9mE82bKmBVbDvBJ00
sqagDMZWV9XLYskanHxA9rqu1T1mf5uvQ7PhhsmHIHLO0jSo+t/cccKPfLSD
C3mz204iF4XmWCaXYrTEXfeAMxR/kTZ0fivCAqc4kcfI8/DtckR0ij35VWU6
WldF5izfzuS/2AJNIjGVtRvJ4mXpqOI+fLXdmBw+k4ui8wlfuvTJgdoCpCGZ
dW4xWaDCQ9TfVJkxc5n6zchCcG6GaogqM//BffA7na09cxK5/l42zi/KM8oZ
R9Z7VopjPwq2rhEnJ6yuhX1qsePTwVlC39epx5YjPDe7n+TGZ9UwmVPi3/OJ
HG4sgP6nsvsX35FjbVOx8GFlhsxzsr7+HajtqymNqCN3vM7DxOn1TZqlZM4u
Psa+b+gsLiCrD+XHinjSb5ZOth3FQc+OJsnmh+RIVgralV6qHAon14/1x4sX
rxf03ySneGejNrjF0PcK2VmbD67Ve6uJHkJzgotLkSHb5vDQheKXr5QgtqHD
RecoOWNPMe74f/Ir20cuvxaLq2Zfwqx2kK0LojAmNvXg5U1k1ZkceA07qZNj
QtboLYfoNp0RHw3Ioua1uJDx95HiUnL/wjoMji0OM17A7P94FVz2uR88O5Os
U8DHb84qnQQVchMrHScmjhrxWp6pZ9NFfDte/WisFFOf7AwcrrkWtkyMfE6E
g09qGw8eGZgpdIs0Fw7sCTrhPWSnoDx8eP5c9NEnsvmnKOxeGPpo2HvGsx+g
2c82bMELssPHImxrm3ZwzyNy+b5yNC1vXxxYTmZ9qoHl7TjRkmKyx89aPPp+
6NHPLLL/jiqYmcwPU0sin3vCR1VUz4HNUUx8WzqM/mUv9rpLZmdfQon1WdHc
G+TYj1lYmbbs0Ucfcp4YH8VjhodNdBe6JfNLKfTsSg6sOyM0e01sKXKKvBaf
c2Ly2cHDIgUT0cR9zPp1mUg7KvXo9Q5mvY0+mFvVECppRdbJS0K86s0Dy03J
4QFFUHfbstjJkKwXykfUMyXRiKXM/LFDv3/nt9Q/WsDMt6UI93wehA6fRU5Z
Gg+lVvsDC6eQbWXCcRuzFu9VIFtHFmHCrc8iQVJk1R/lCOhOqS8RIyuNroOU
8YnQXwPqQn/XrIffg8UHZvwkd2VWQ3ygT9u6i1zPEeCSVZGI93uy9MQMDE+5
UJ/7Qp3Z3yWcH7UqtPMROeV6Fvp3ix+YVMHMJ8bDmYIqbRMOudtFgF9y10Rc
sxnv5+H4EYv6xCRyy5scdJfLhTZHMS4Og+PU5/ulQsmsh9H4ePautn4gWca/
APZPdooc9SW/PSDAu7nT6iPchdZ/1FmKnV5tdxvOCM1OXFaCV28f7hc5SuNX
KhVjy9JD2loOzPxhcXgaqClit5PcYRqOjV9+1AVZkfsbClG/JvtuqSkTFy+H
aYTL/t+GZOuXNajsg7a6HlMv86Hf65bDRLYsJDsrVoOfKKjznkU+VyWAspb1
igEVsm1OOlzyPqU5yTP7MfTDE/3zqq1jyb2FWdAsk7m5WZSpXzIHfqbRI6v6
ZtB+TnDQ/njJmWXfyP6nMrFya01najuZdfkcwlpsbaY3kx1OZ6LPvqcmuJFs
eLgEmz5fXi5RRdbiVyPl+KTU81yyhnwdJPqSpv7IJhf8rBr6PFgZaJ/EzC8p
AF/s6YgXkeQW6TQoX9l/2vQO2Wn2LbiMH+jgXCcPb8/D09v+W7W8hGY/TxVg
vopqdYwbeYVNGfyiszHpJI1f/18JOjTWJV89SO6UL4RBerPK8N1ka6tIhC05
FnDSmqzZGIm+4hGiH83IvdIF2LT69kmbVWTRDXykVGu01y0lq8fzIbGRY22w
gGx7tBD7nm+szFJn9j8vCryd7UtnTSZ318RBuc0lMVSObPlw6Lw7Sk4eJ8HU
91MVGr9H+HsMJ5vPqYfmmUXDe3vVqF9dtfD7V3784Fdy9e8ytF+y+dD8gWyr
loeVEt1WFq/I7OenEBZwsbykgWxUm4E/CvK6SyrITV+4sLwXF59QTJY+IUDK
9GX/qWSRLVO4GJPw6OqNBLL4uEzYL7BjjXxA1ldyBi+n96jLbXJsbRr+W+73
/vM18r5sLpxLJm/a5UnevLsUjevSSxvPCc0utyjFvIbVOkbHKa6zjwsf6xcP
8/cz+TxOQVvzoUnzbMktDsFYaTfsyn0rJr/7hQj9FDgoZ0o+F1yO3qPqTt4G
ZD3bWlj25r/tX0J+1VmLFLf1G500yb0SlRgz4r3gvRqT7xMO7H1PaW/+j1nP
aKh/40bHVo4n19vGQDk4VHHZaKae4wpwRnm+byqLWc+ci8ZIQb/q7+lCc6oL
oTnb+nDwZ7L/xUT4pn56M6aVHB51B22Lz284/4LcNKEIK4tk+N/ryd0Z5Qg1
jNayLyN7raxF2Iq4LWJF5FifWoQvS3KLziBbx1cgYmnag9XxZIWHHNzXySpv
iyC3LIhC5KK8z57BzHo9sYhaUCQz4xrZMq0Y0fN4i8suCc0OeDV0P9Eotdl3
juISpmV4OLPywsjj5PMSAsSp1UbH7Ceb5OciYVpD1RpbstOwECSqPO1utyI7
TIhH0n8v5LxMyeJji5AysVlX3ZDccY+PVPl3O8t1yfrb+EiTbfNwmP//8xUg
fVznQ3F1su2rCGRIfqmNVSab+yUia8z3H0Zy5C4ZPrLFfyl8HEPeK12NnBF9
8B5Ojhv6PssbPrh75h9VoQOHvu/y/w3zqvhKDt9ajoL+EYn728jON/NR+GdU
w6jXZE6QD4p+jf398DHZqDMNnB/jlIwrGZtwwe2WW9HJIZvbCcD7rGjvk01W
teVB0Pmf76wkcs7LbJS0T0mpjCR3jwpCaev0JwfuMOtXJaLs7cy+0QHkzNkc
lDfPmRzvJTTbM60ElS/nG647L7T/s+elqGpatP/TSRq/WJ+P6idLrvo6kve+
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
Ewg/7T0HHLIYm6TBZfm12zcekGVHCrDfKL+8yJ8saK+C9Yb23x9dyfVz67B6
6/gZcgfJttNroLVnuZW+NdlmbimmOR68dHAVE/fPhszJWxk3F5BZOTvAcuO/
504m6ySl46vnV5nPEmTnoftS/uTFHpo9UkIHL+IieP61d561ZNvbuThl0K7/
OpbM8b+HM/wVPnmXyJoT4nDO4O7jW7vJJiwu2PxfSieXk3WOVOCiwQZ7CyUm
vrgWnvz45Hl/JKkep4fukwZifySekrtnVeIK33ZlZxrZWpkHf4N837JrZPWu
JNzgyz2JdGTG99zGTQMnZfe15KSh35sh/Mp9O9XI6TIChBpMT9UTEVo6ZHsZ
wvnn+xRbxgrjDi6liDR4YfC7gPw2mYsYvtaVxttkr8p0xBlce5p6isy+dxSJ
/I+Tr20kO+unIsXAcL+jJlk6txgZ/LC0tWPJOgl8ZBv8+avWKSH0XlU+8vgb
V4mWkYPXFaDIIOnq2wfk8KQocPniTUVsMmd6NAQGe6bc3U42zOGgjF944Iwu
OUOkEpUGChlW8mTnsDrU8o8NLOwZI7Sfdj0eGdSsHveI3LumGo38Gf5fEsk6
g3w0Gbg/r/Ihm29Mw0v+q6kP95FVNK+j2WCxo6chOSU5G2/51zP3TGGeX8JD
q0HXoP7gaFpvrQAd/NVGyi/J4m+4+GQQcf1vNrneLBtf+H9fNAWSzUNu4buB
lWrWUXLL0Hn6yU85dMOM3NhXiF6DMdlOs8kWHwT4y7djmYkLrbJ5ShkGDThr
Z38YJYz/0SrBcMHEG+I8sm14EUYYnnz1IYxcPv8hxAV10/lnyayGCEgYzjoS
bs2MdyqClMAjx3URuWt+OWQM3wzbJkOOfVwDOcGSdTpfxak+E+qgYBgYKFdN
7s+sgpLgy+vvseJMfwWYbLh2Rv0lsvm5DEwVPHBK3E1mmztBzXAw12c52TYx
HTMF1iIOSmRnTjE0DNNNVv0ZKbSmPRfzBGNvTn1K9tcuwAJDhzf/0hinxEFb
wFN/fY3Mnn8HSwz/O5bnyDw/vwB6gtP5t9aSE4a+3/UNG0RPqpE1DGtgINAw
sxAhn2iuxWrDy7fmtYgJLXhSBcHpqSfk88gmLAFWxBea/7tBPiGThqJm6znt
h8jdX29CT6ZnVN0asurbPOStutaWNYW8sliAxWdm8cP+jvif9VO8ypCRUHLP
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
5PaoZmfJpmox/gdbEnDw
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6474483206603403`*^9, 3.6474483531325073`*^9, 
  3.647450511858465*^9, 3.647450754729549*^9, 3.647451476842122*^9, 
  3.647451507394644*^9, 3.647451875527767*^9, 3.647451980990241*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1027, 852},
WindowMargins->{{Automatic, 316}, {6, Automatic}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
ShowSelection->True,
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.5, 1.5 Inherited],
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 163, 2, 95, "Section"],
Cell[745, 26, 218, 4, 46, "Text"],
Cell[966, 32, 654, 17, 94, "Input"],
Cell[1623, 51, 1884, 50, 319, "Input"],
Cell[3510, 103, 3801, 101, 419, "Input"],
Cell[7314, 206, 684, 16, 69, "Input"],
Cell[8001, 224, 707, 17, 69, "Input"],
Cell[8711, 243, 783, 19, 144, "Input"],
Cell[9497, 264, 2127, 51, 269, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11661, 320, 192, 2, 147, "Section"],
Cell[11856, 324, 2064, 55, 244, "Input"],
Cell[13923, 381, 1540, 39, 219, "Input"],
Cell[15466, 422, 1599, 43, 194, "Input"],
Cell[17068, 467, 2518, 69, 269, "Input"],
Cell[19589, 538, 3033, 80, 294, "Input"],
Cell[22625, 620, 2213, 62, 294, "Input"],
Cell[24841, 684, 635, 18, 44, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25513, 707, 1114, 24, 174, "Section"],
Cell[26630, 733, 1179, 24, 106, "Text"],
Cell[27812, 759, 144, 3, 43, "Input"],
Cell[CellGroupData[{
Cell[27981, 766, 511, 11, 43, "Input"],
Cell[28495, 779, 1059, 20, 89, "Output"]
}, Open  ]],
Cell[29569, 802, 645, 15, 43, "Input"],
Cell[30217, 819, 3228, 72, 219, "Input"],
Cell[33448, 893, 1111, 23, 76, "Text"],
Cell[CellGroupData[{
Cell[34584, 920, 621, 17, 69, "Input"],
Cell[35208, 939, 11855, 203, 361, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47100, 1147, 1601, 31, 94, "Input"],
Cell[48704, 1180, 25282, 420, 365, "Output"]
}, Open  ]],
Cell[74001, 1603, 1140, 24, 106, "Text"],
Cell[75144, 1629, 761, 21, 94, "Input"],
Cell[CellGroupData[{
Cell[75930, 1654, 150, 3, 43, "Input"],
Cell[76083, 1659, 231, 3, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76351, 1667, 249, 5, 43, "Input"],
Cell[76603, 1674, 1936, 45, 119, "Output"]
}, Open  ]],
Cell[78554, 1722, 152, 3, 46, "Text"],
Cell[78709, 1727, 605, 13, 43, "Input"],
Cell[79317, 1742, 3812, 73, 219, "Input"],
Cell[83132, 1817, 3476, 103, 269, "Input"],
Cell[CellGroupData[{
Cell[86633, 1924, 290, 6, 43, "Input"],
Cell[86926, 1932, 4824, 79, 237, "Output"]
}, Open  ]],
Cell[91765, 2014, 203, 2, 46, "Text"],
Cell[91971, 2018, 920, 25, 69, "Input"],
Cell[CellGroupData[{
Cell[92916, 2047, 165, 2, 43, "Input"],
Cell[93084, 2051, 3806, 70, 286, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96927, 2126, 1064, 23, 93, "Subsection"],
Cell[CellGroupData[{
Cell[98016, 2153, 48, 1, 43, "Input"],
Cell[98067, 2156, 2683, 72, 169, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100787, 2233, 71, 1, 43, "Input"],
Cell[100861, 2236, 3136, 61, 286, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104034, 2302, 1825, 34, 94, "Input"],
Cell[105862, 2338, 15708, 261, 360, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[121631, 2606, 190, 2, 147, "Section"],
Cell[CellGroupData[{
Cell[121846, 2612, 145, 1, 65, "Subsection"],
Cell[121994, 2615, 1424, 38, 119, "Input"],
Cell[123421, 2655, 1051, 32, 94, "Input"],
Cell[124475, 2689, 1104, 31, 94, "Input"],
Cell[125582, 2722, 1187, 33, 94, "Input"],
Cell[CellGroupData[{
Cell[126794, 2759, 969, 24, 169, "Input"],
Cell[127766, 2785, 3204, 63, 361, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131007, 2853, 574, 16, 69, "Input"],
Cell[131584, 2871, 47219, 785, 361, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178840, 3661, 572, 16, 69, "Input"],
Cell[179415, 3679, 46807, 778, 361, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[226271, 4463, 129, 1, 65, "Subsection"],
Cell[226403, 4466, 1794, 44, 244, "Input"],
Cell[228200, 4512, 112, 1, 46, "Text"],
Cell[228315, 4515, 1601, 38, 219, "Input"],
Cell[CellGroupData[{
Cell[229941, 4557, 95, 1, 43, "Input"],
Cell[230039, 4560, 182, 2, 43, "Output"]
}, Open  ]],
Cell[230236, 4565, 1076, 28, 94, "Input"],
Cell[CellGroupData[{
Cell[231337, 4597, 762, 17, 69, "Input"],
Cell[232102, 4616, 47615, 790, 361, "Output"]
}, Open  ]],
Cell[279732, 5409, 110, 1, 46, "Text"],
Cell[279845, 5412, 845, 23, 119, "Input"],
Cell[280693, 5437, 522, 12, 43, "Input"],
Cell[CellGroupData[{
Cell[281240, 5453, 507, 13, 69, "Input"],
Cell[281750, 5468, 47300, 786, 361, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
