#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage[
% these settings create hierarchical bookmarks which follow the
% document hierarchy
        bookmarks=true,
        bookmarksopen=true,
        bookmarksnumbered=true,
% theese parameters are useful only if you build a pdf file
% pdftitle={ DOCUMENT TITLE },
% pdfauthor={ YOUR INFO },
% pdfcreator={LyX, the LaTeX frontend with hyperref},
% pdfkeywords={ DOCUMENT KEYWORDS },
% pdfsubject={ DOCUMENT SUBJECT },
% see http://www.tex.ac.uk/cgi-bin/texfaq2html?label=pdfpagelabels
        pdfpagelabels, plainpages=false,
% these settings remove all colours around any kind of link
        colorlinks=true,
        linkcolor=black,
        urlcolor=black,
        filecolor=black,
        citecolor=black,
]{hyperref}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1.5cm
\topmargin 1.5cm
\rightmargin 1.5cm
\bottommargin 1.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
SWEET's data containers
\end_layout

\begin_layout Author
Martin Schreiber
\end_layout

\begin_layout Section*
Version information
\end_layout

\begin_layout Itemize
2016-10-05: First release
\end_layout

\begin_layout Itemize
2019-02-23: Updated version
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
SWEET provides various data containers and conversions between physical
 and spectral spaces.
 This document provides the information on the reasons how the simulation
 data is abstracted into classes.
\end_layout

\begin_layout Standard
Running simulations with global spectral methods turns out to be a task
 which also impacts software design.
 With the requirement of supporting simulations on the plane with the double-Fou
rier and on the sphere with Spherical Harmonics, also the way how data is
 stored and processed should be generated not only in a programmable way,
 but should also consider the underlying mathematical and performance requiremen
ts.
 Additional requirements arise from 3rd party libraries.
\end_layout

\begin_layout Standard
The focus will be put on simulations on the sphere.
\end_layout

\begin_layout Section
Requirements
\end_layout

\begin_layout Subsection
Mathematics
\end_layout

\begin_layout Enumerate
Non-linearities: Support for anti-aliasing
\end_layout

\begin_layout Enumerate
Multi-level methods: Support of different resolutions in spectral and physical
 space
\end_layout

\begin_layout Subsection
Software framework
\end_layout

\begin_layout Enumerate
Programmability:
\end_layout

\begin_deeper
\begin_layout Enumerate
Support operator-styled arithmetic operations (e.g.
 a+b where a and b are data arrays)
\end_layout

\begin_layout Enumerate
Hide (parallel) iteration loops and anti-aliasing if requested
\end_layout

\end_deeper
\begin_layout Enumerate
Clear interfaces: Support sphere with SPH and plane data with FFT in a similar
 way
\end_layout

\begin_layout Subsection
HPC
\end_layout

\begin_layout Enumerate
Parallelization: Efficient implementation on nowadays HPC shared-memory
 systems (e.g.
 caring about NUMA awareness)
\end_layout

\begin_layout Enumerate
Memory: No additional memory consumption
\end_layout

\begin_layout Section
Data containers
\end_layout

\begin_layout Subsection
Physical data
\end_layout

\begin_layout Standard
We require physical data to e.g.
 setup the initial conditions and, related to the spectral data, to evaluate
 multiplications in pseudo-spectral space.
\end_layout

\begin_layout Subsection
Data arrays
\end_layout

\begin_layout Standard
The data arrays are required as pure arrays, containing e.g.
 a list of departure points for semi-Lagrangian methods.
\end_layout

\begin_layout Subsection
Spectral data
\end_layout

\begin_layout Subsubsection
Spectral methods: FFT and SPH
\end_layout

\begin_layout Standard
We rely on existing libraries to convert data from spectral to physical
 space.
 Libraries for the FFTW have restrictions which is the reason for this discussio
n document.
\end_layout

\begin_layout Subsubsection
Requirements for spectral/physical conversions
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $(N,M)$
\end_inset

 be the number of modes in spectral space and 
\begin_inset Formula $(X,Y)$
\end_inset

 the resolution in physical space.
 For the FFT used for simulations on the plane, we use the FFTW.
 For the SPH for simulations on the sphere we use the SHTns library.
 We directly encounter a restriction by using the FFTW.
 This only supports transformations if with 
\begin_inset Formula $X=N$
\end_inset

 and 
\begin_inset Formula $Y=M$
\end_inset

.
\end_layout

\begin_layout Standard
On the other hand, SHTns and also related libraries for spherical harmonics
 support different size of spectral and physical spaces with 
\begin_inset Formula $X!=N$
\end_inset

 and 
\begin_inset Formula $Y!=M$
\end_inset

.
\end_layout

\begin_layout Subsubsection
Comment on 
\begin_inset Quotes eld
\end_inset

plans
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
Both libraries require the creation of 
\begin_inset Quotes eld
\end_inset

plans
\begin_inset Quotes erd
\end_inset

.
 These plans should be created only once and then reused.
 A reference counter is used to free plans if they are not required anymore.
\end_layout

\begin_layout Subsubsection
(Anti-)aliasing
\end_layout

\begin_layout Paragraph
No anti-aliasing
\end_layout

\begin_layout Standard
Without anti-aliasing it is sufficient to have the same number of modes
 in spectral space as the resolution is in physical space: 
\begin_inset Formula $X=N$
\end_inset

 and 
\begin_inset Formula $Y=M$
\end_inset

.
\end_layout

\begin_layout Paragraph
SPH Anti-aliasing
\end_layout

\begin_layout Standard
Anti-aliasing treatment is required for evaluating non-linearities.
 Even for a linear operators, such non-linearities might be required to
 multiply e.g.
 with 
\begin_inset Formula $(1-\mu^{2})^{-1}$
\end_inset

 which is done in physical space if using spherical harmonics.
 We only focus on implementations which support a fixed physical resolution
 for a given number of modes.
 (In the current implementation the physical space is always 
\begin_inset Formula $X=N$
\end_inset

 and 
\begin_inset Formula $Y=M$
\end_inset

 which might result in certain issues regarding anti-aliasing modes.)
\end_layout

\begin_layout Standard
Using SPH libraries, they typically support resolutions and a maximum number
 of modes which are not equivalent and we can easily support anti-aliasing.
 Here, the 
\begin_inset Formula $2/3$
\end_inset

 rule can be directly realized by using different sizes for the spatial/spectral
 space.
 Just by choosing a lower number of modes allows using only one buffer for
 spectral space of size 
\begin_inset Formula $N\times M$
\end_inset

 and another buffer for the data in spatial space of size 
\begin_inset Formula $X\times Y$
\end_inset

.
\end_layout

\begin_layout Paragraph
FFTW anti-aliasing
\end_layout

\begin_layout Standard
However, FFTW requires to have identical spatial resolution and number of
 spectral modes, hence 
\begin_inset Formula $X=N$
\end_inset

 and 
\begin_inset Formula $Y=M$
\end_inset

.
 To cope with anti-aliasing, we require to run a FFT with a larger spectrum
 but with the higher modes set to zero before each of these FFTs.
 The size of the spectrum is given by 
\begin_inset Formula $(NL,ML)$
\end_inset

 and is typically 
\begin_inset Formula $(NL,ML)=(N3/2,M3/2)$
\end_inset

.
 We also discuss how to handle the operators (add, sub) in spectral space.
 We continue to discuss different methods to cope with this issue:
\end_layout

\begin_layout Itemize

\series bold
Two buffers with padding:
\series default

\begin_inset Newline newline
\end_inset

MUL: There are two separate buffers of size 
\begin_inset Formula $(N,M)$
\end_inset

 and 
\begin_inset Formula $(NL,ML)$
\end_inset

.
 Computing a multiplication in physical space is then accomplished by
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Copy data from 
\begin_inset Formula $(N,M)$
\end_inset

 to 
\begin_inset Formula $(NL,ML$
\end_inset

) and use
\emph on
 zero padding
\emph default
.
\end_layout

\begin_layout Enumerate
Use FFT with 
\begin_inset Formula $(NL=X,ML=Y)$
\end_inset

 to compute representation in physical space
\end_layout

\begin_layout Enumerate
[multiplication in physical space]
\end_layout

\begin_layout Enumerate
Use inverse FFT with 
\begin_inset Formula $(NL=X,ML=Y)$
\end_inset

 to compute representation in spectral space
\end_layout

\begin_layout Enumerate
Copy corresponding modes from 
\begin_inset Formula $(NL,ML)$
\end_inset

 to 
\begin_inset Formula $(N,M)$
\end_inset

.
\end_layout

\begin_layout Standard
ADD/SUB: All other operators such as adding two spectral representations
 can be then realized by a single for loop without knowing about boundaries
 of 
\begin_inset Formula $(N,M)$
\end_inset

 and 
\begin_inset Formula $(NL,ML)$
\end_inset

 but just of 
\begin_inset Formula $I=N\times M$
\end_inset

.
\begin_inset Newline newline
\end_inset

DRAWBACKS: Handling of two buffers and either always allocating an additional
 buffer or requiring to allocate a buffer if required.
\begin_inset Newline newline
\end_inset

ADVANTAGES: Optimal application of spectral operators due to the single
 for loop.
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Merged buffers to single one with padding:
\series default

\begin_inset Newline newline
\end_inset

This idea is basically the same one as the one before.
 However, the difference is that both buffers are shared.
\begin_inset Newline newline
\end_inset

DRAWBACKS: Copy data from 
\begin_inset Formula $(N,M)$
\end_inset

 to 
\begin_inset Formula $(NL,ML$
\end_inset

) and use zero padding might not be accomplished in parallel
\begin_inset Newline newline
\end_inset

ADVANTAGES: Avoid using 2nd buffer, optimal application of spectral operators.
\end_layout

\begin_layout Itemize

\series bold
Use only single spectral buffer with special loop iterations:
\series default

\begin_inset Newline newline
\end_inset

Here, we allocate a buffer of size 
\begin_inset Formula $(NL,ML)$
\end_inset

 and handle all ADD/SUB of spectral data by only partial loop intervals
 
\begin_inset Formula $(N,M)$
\end_inset

.
 Computing a multiplication in physical space is then accomplished by
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Zero out modes 
\begin_inset Formula $(>N,>M)$
\end_inset

.
\end_layout

\begin_layout Enumerate
Use FFT with 
\begin_inset Formula $(NL=X,ML=Y)$
\end_inset

 to compute representation in physical space
\end_layout

\begin_layout Enumerate
[multiplication in physical space]
\end_layout

\begin_layout Enumerate
Use inverse FFT with 
\begin_inset Formula $(NL=X,ML=Y)$
\end_inset

 to compute representation in spectral space
\end_layout

\begin_layout Standard
ADD/SUB: A special treatment is required to handle the iterations in spectral
 space in order to avoid iterating over 
\begin_inset Formula $(NL,ML)$
\end_inset

 since only an iteration over 
\begin_inset Formula $(N,M)$
\end_inset

 is required.
\begin_inset Newline newline
\end_inset

DRAWBACKS: Special iteration in spectral space required, maybe not optimal
\begin_inset Newline newline
\end_inset

ADVANTAGES: Only a single buffer, reassembles the SPH implementation
\end_layout

\end_deeper
\begin_layout Section
Realization
\end_layout

\begin_layout Subsection
Plane Data
\end_layout

\begin_layout Standard
Some of the plane-based simulations also require support for finite-differences.
 However, this requires a class supporting both spectral and physical data.
 Therefore, a clear separation of this is not possible with Plane Data,
 yet.
\end_layout

\begin_layout Subsection
Sphere Data
\end_layout

\begin_layout Standard
This is the summary of the different sphere-related classes in SWEET.
\end_layout

\begin_layout Subsubsection
Data storage (SphereData_*)
\end_layout

\begin_layout Itemize

\series bold
SphereData_Physical
\series default
: Real-valued data in physical space
\end_layout

\begin_layout Itemize

\series bold
SphereData_PhysicalComplex
\series default
: Complex data in physical space
\end_layout

\begin_layout Itemize

\series bold
SphereData_Spectral
\series default
: Data in spectral space, corresponding to real-valued data in physical
 space
\end_layout

\begin_layout Itemize

\series bold
SphereData_SpectralComplex
\series default
: Spectral data based on complex-valued physical data
\end_layout

\begin_layout Itemize

\series bold
SphereData_Config
\series default
: Information how to convert data from/to physical/spectral space
\end_layout

\begin_layout Subsubsection
Operations with data(SphereOperators_*)
\end_layout

\begin_layout Itemize

\series bold
SphereOperators_SphereData
\series default
: Real-valued operators
\end_layout

\begin_layout Itemize

\series bold
SphereOperators_SphereDataComplex
\series default
: Operators for complex-valued data
\end_layout

\begin_layout Itemize

\series bold
SphereOperators_Sampler_SphereDataPhysical
\series default
: Sampling operators for real-valued physical data
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Subsubsection
Time integration (SphereTimestepping_*)
\end_layout

\begin_layout Itemize

\series bold
SphereTimestepping_ExplicitLeapfrog
\series default
: Realization of Explicit Leapfrog time integration
\end_layout

\begin_layout Itemize

\series bold
SphereTimestepping_ExplicitRK
\series default
: Explicit time integration with Runge-Kutta
\end_layout

\begin_layout Itemize

\series bold
SphereTimestepping_SemiLagrangian
\series default
: SL-time stepping method
\end_layout

\begin_layout Subsubsection
Helper routines (SphereHelpers_*)
\end_layout

\begin_layout Itemize

\series bold
SphereHelpers_Coordinates
\series default
: Helper routines for transformation coordinates between different systems
\end_layout

\begin_layout Itemize

\series bold
SphereHelpers_Diagnostics
\series default
: Extract diagnostic information from sphere data
\end_layout

\begin_layout Itemize

\series bold
SphereHelpers_SPHIdentities
\series default
: Useful identities for Spherical Harmonics
\end_layout

\begin_layout Subsection
Converting between different data representations
\end_layout

\begin_layout Subsubsection
Target: SphereDataPhysical
\end_layout

\begin_layout Standard
\align left
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
from
\backslash
to
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
SphereDataPhysical
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
SphereDataPhysical
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
=
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
SphereDataPhysicalComplex
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Convert_SphereDataPhysicalComplex_to_SphereDataPhysical
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
ScalarDataArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Convert_ScalarDataArray_to_SphereDataPhysical
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
SphereDataSpectral
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SphereDataSpectral.getSphereDataPhysical()
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Target: SphereDataPhysicalComplex
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
from
\backslash
to
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
SphereDataPhysicalComplex
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
SphereDataPhysical
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[TODO]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
SphereDataPhysicalComplex
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
=
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
ScalarDataArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(not supported)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
SphereDataSpectral
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(not supported)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
SphereDataSpectralComplex
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SphereDataSpectralComplex.getSphereDataPhysicalComplex()
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Target: ScalarDataArray
\end_layout

\begin_layout Standard
SphereDataPhysical is the only data field which can be used to setup ScalarDataA
rrays.
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
from
\backslash
to
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
ScalarDataArray
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
SphereDataPhysical
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Convert_SphereDataPhysical_to_ScalarDataArra
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
SphereDataPhysicalComplex
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(not supported)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
ScalarDataArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
=
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
SphereDataSpectral
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(not supported)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
SphereDataSpectralComplex
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(not supported)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Target: SphereDataSpectral
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
from
\backslash
to
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
SphereDataSpectral
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
SphereDataPhysical
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SphereDataSpectral.loadSphereDataPhysical(...)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
SphereDataPhysicalComplex
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(not supported)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
ScalarDataArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(not supported)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
SphereDataSpectral
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
=
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
SphereDataSpectralComplex
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Convert_SphereDataSpectralComplex_to_SphereDataSpectral
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Target: SphereDataSpectralComplex
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
from
\backslash
to
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
SphereDataSpectralComplex
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
SphereDataPhysical
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SphereDataSpectral.loadSphereDataPhysical(...)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
SphereDataPhysicalComplex
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(not supported)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
ScalarDataArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(not supported)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
SphereDataSpectral
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Convert_SphereDataSpectral_to_SphereDataSpectralComplex
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
SphereDataSpectralComplex
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
=
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_body
\end_document
